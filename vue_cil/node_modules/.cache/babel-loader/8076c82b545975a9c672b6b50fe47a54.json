{"remainingRequest":"c:\\xampp\\htdocs\\xiuse_jie\\vue_cil\\node_modules\\babel-loader\\lib\\index.js!c:\\xampp\\htdocs\\xiuse_jie\\vue_cil\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!c:\\xampp\\htdocs\\xiuse_jie\\vue_cil\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!c:\\xampp\\htdocs\\xiuse_jie\\vue_cil\\src\\components\\square.vue?vue&type=script&lang=js&","dependencies":[{"path":"c:\\xampp\\htdocs\\xiuse_jie\\vue_cil\\src\\components\\square.vue","mtime":1569386944099},{"path":"c:\\xampp\\htdocs\\xiuse_jie\\vue_cil\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564486950657},{"path":"c:\\xampp\\htdocs\\xiuse_jie\\vue_cil\\node_modules\\babel-loader\\lib\\index.js","mtime":1564486949725},{"path":"c:\\xampp\\htdocs\\xiuse_jie\\vue_cil\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564486950657},{"path":"c:\\xampp\\htdocs\\xiuse_jie\\vue_cil\\node_modules\\vue-loader\\lib\\index.js","mtime":1564486976739}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 轮播组件: https://github.com/surmon-china/vue-awesome-swiper\nimport 'swiper/dist/css/swiper.css';\nimport { swiper, swiperSlide } from 'vue-awesome-swiper'; // 引入mescroll的vue组件\n\nimport MescrollVue from 'mescroll.js/mescroll.vue';\nimport { setTimeout } from 'timers'; // 模拟数据\n// import mockData from '../mock/pdlist'\n\nexport default {\n  name: 'square',\n  data: function data() {\n    var _this = this;\n\n    return {\n      tabs: [{\n        name: '大厅',\n        mescroll: null,\n        list: [],\n        isListInit: false\n      }, {\n        name: '关注',\n        mescroll: null,\n        list: [],\n        isListInit: false\n      }, {\n        name: '最近观看',\n        mescroll: null,\n        list: [],\n        isListInit: false\n      }, {\n        name: '新秀',\n        mescroll: null,\n        list: [],\n        isListInit: false\n      }, {\n        name: 'pk',\n        mescroll: null,\n        list: [],\n        isListInit: false\n      }, {\n        name: '好声音',\n        mescroll: null,\n        list: [],\n        isListInit: false\n      }, {\n        name: '萌妹子',\n        mescroll: null,\n        list: [],\n        isListInit: false\n      }, {\n        name: '够劲爆',\n        mescroll: null,\n        list: [],\n        isListInit: false\n      }, {\n        name: '同城',\n        mescroll: null,\n        list: [],\n        isListInit: false\n      }, {\n        name: '热舞',\n        mescroll: null,\n        list: [],\n        isListInit: false\n      }, {\n        name: '手机',\n        mescroll: null,\n        list: [],\n        isListInit: false\n      }, {\n        name: '代言人',\n        mescroll: null,\n        list: [],\n        isListInit: false\n      }],\n      tabWidth: 60,\n      // 每个tab的宽度\n      barWidth: 30,\n      // tab底部红色线的宽度\n      curIndex: 0,\n      // 当前tab的下标,遍历list时不能用tabs[curIndex]，因为curIndex每次切换tab会变化，导致页面不能缓存\n      tabScrollLeft: 0,\n      // 菜单滚动条的位置\n      swiperOption: {\n        // 轮播配置\n        on: {\n          transitionEnd: function transitionEnd() {\n            _this.changeTab(_this.swiper.activeIndex);\n          }\n        }\n      },\n      isWhiteBg: false,\n      //菜单背景\n      isfontBlack: false,\n      //菜单字体颜色\n      isgrayMoving: false,\n      //菜单动态图标\n      isgraySearch: false //菜单搜索图标\n\n    };\n  },\n  components: {\n    swiper: swiper,\n    // 轮播组件\n    swiperSlide: swiperSlide,\n    // 轮播组件\n    MescrollVue: MescrollVue // Mescroll组件\n\n  },\n  computed: {\n    swiper: function swiper() {\n      // 轮播对象\n      console.log(this.$refs.mySwiper.swiper);\n      return this.$refs.mySwiper.swiper;\n    },\n    barLeft: function barLeft() {\n      // 红线的位置\n      return this.tabWidth * this.curIndex + (this.tabWidth - this.barWidth) / 2 + 'px';\n    }\n  },\n  methods: {\n    //跳转到live（直播）组件，并把主播信息参数传递过去\n    //获取视频源地址并修改原来的地址\n    getSourceSrc: function getSourceSrc(_ref) {\n      var _this2 = this;\n\n      var id = _ref.id,\n          hallBg_src = _ref.hallBg_src,\n          hallRanking_src = _ref.hallRanking_src,\n          RankIcon_src = _ref.RankIcon_src,\n          sign = _ref.sign,\n          watchIcon_src = _ref.watchIcon_src,\n          watchNum = _ref.watchNum,\n          uid = _ref.uid,\n          sourceSrc = _ref.sourceSrc;\n      //取消通过发送ajax来获取视频源地址\n      // this.axios.get(\"http://127.0.0.1:7000/square/sourceSrc\",{\n      //   params:{\n      //     id:id\n      //   }\n      // }\n      // ).then(res=>{\n      //     console.log(res.data)\n      //     //修改vuex里面的视频源地址\n      //     this.$store.commit('mutSourceSrc',res.data[0].sourceSrc)\n      // })\n      //采用在视频列表加载时获得源地址\n      this.$store.commit('mutSourceSrc', sourceSrc);\n      console.log(this.$store.getters.getSourceSrc); //修改源地址后再跳转到直播页面\n\n      setTimeout(function () {\n        //.5s延迟让其他点击事件先执行完\n        _this2.$router.push({\n          name: 'live',\n          params: {\n            hid: id,\n            hallBg_src: hallBg_src,\n            hallRanking_src: hallRanking_src,\n            RankIcon_src: RankIcon_src,\n            sign: sign,\n            watchIcon_src: watchIcon_src,\n            watchNum: watchNum,\n            uid: uid,\n            sourceSrc: sourceSrc\n          }\n        });\n      }, 300);\n    },\n    //保存观看记录\n    record: function record(_ref2) {\n      var id = _ref2.id,\n          hallBg_src = _ref2.hallBg_src,\n          hallRanking_src = _ref2.hallRanking_src,\n          RankIcon_src = _ref2.RankIcon_src,\n          sign = _ref2.sign,\n          watchIcon_src = _ref2.watchIcon_src,\n          watchNum = _ref2.watchNum,\n          uid = _ref2.uid,\n          sourceSrc = _ref2.sourceSrc;\n      //记录当前用户的观看当前的主播信息\n      this.axios.post(\"http://127.0.0.1:7000/square/saveScanned\", this.qs.stringify({\n        hid: id,\n        //当前点击观看的主播id\n        hallBg_src: hallBg_src,\n        hallRanking_src: hallRanking_src,\n        RankIcon_src: RankIcon_src,\n        sign: sign,\n        watchIcon_src: watchIcon_src,\n        watchNum: watchNum,\n        uid: uid,\n        //假设当前的用户3对应的id\n        sourceSrc: sourceSrc\n      }));\n    },\n    // 多mescroll的配置,需通过方法获取,保证每个配置是单例\n    getMescrollDown: function getMescrollDown(tabIndex) {\n      var isAuto = tabIndex === 0; // 第一个mescroll传入true,列表自动加载\n\n      return {\n        auto: isAuto,\n        callback: this.downCallback\n      };\n    },\n    // mescroll上拉加载的配置\n    getMescrollUp: function getMescrollUp(tabIndex) {\n      var emptyWarpId = 'dataList' + tabIndex;\n      return {\n        lazyLoad: {\n          use: true,\n          // 是否开启懒加载,默认false\n          attr: 'imgurl',\n          // 网络地址的属性名 (图片加载成功会移除该属性): <img imgurl='网络图  src='占位图''/>\n          showClass: 'mescroll-lazy-in',\n          // 图片加载成功的显示动画: 渐变显示,参见mescroll.css\n          delay: 500,\n          // 列表滚动的过程中每500ms检查一次图片是否在可视区域,如果在可视区域则加载图片\n          offset: 200 // 超出可视区域200px的图片仍可触发懒加载,目的是提前加载部分图片\n\n        },\n        auto: false,\n        htmlNodata: '<p class=\"upwarp-nodata\">没有更多...</p>',\n        callback: this.upCallback,\n        // 上拉回调,此处可简写; 相当于 callback: function (page) { upCallback(page); }\n        noMoreSize: 0,\n        // 如果列表已无数据,可设置列表的总数量要大于半页才显示无更多数据;避免列表数据过少(比如只有一条数据),显示无更多数据会不好看; 默认5\n        empty: {\n          warpId: emptyWarpId,\n          // 父布局的id;\n          icon: '//127.0.0.1:7000/img/NotInfo.PNG',\n          // 图标,默认null\n          tip: '暂无相关数据~' // 提示\n          // btntext: '去逛逛 >', // 按钮,默认\"\"\n          // btnClick: function () { // 点击按钮的回调,默认null\n          //   alert('点击了按钮,具体逻辑自行实现')\n          // }\n\n        },\n        toTop: {\n          // 配置回到顶部按钮\n          src: 'http://www.mescroll.com/img/mescroll-totop.png' // 图片路径,默认null (建议写成网络图,不必考虑相对路径)\n\n        }\n      };\n    },\n    // mescroll初始化的回调\n    mescrollInit: function mescrollInit(tabIndex, arg) {\n      this.tabs[tabIndex].mescroll = arg[0]; // 传入mescroll对象\n\n      this.tabs[tabIndex].mescroll.tabIndex = tabIndex; // 加入标记,便于在回调中取到对应的list\n    },\n    // 切换菜单\n    changeTab: function changeTab(tabIndex) {\n      if (this.curIndex === tabIndex) return; // 避免重复调用\n\n      var curTab = this.tabs[this.curIndex]; // 当前列表\n\n      var newTab = this.tabs[tabIndex]; // 新转换的列表\n      //从第二个tab开始，tabNav字体颜色，和图片发生变化\n\n      if (tabIndex !== 0) {\n        this.isWhiteBg = true;\n        this.isfontBlack = true;\n        this.isgrayMoving = true;\n        this.isgraySearch = true;\n      } else {\n        this.isWhiteBg = false;\n        this.isfontBlack = false;\n        this.isgrayMoving = false;\n        this.isgraySearch = false;\n      }\n\n      curTab.mescroll && curTab.mescroll.hideTopBtn(); // 隐藏当前列表的回到顶部按钮\n\n      this.curIndex = tabIndex; // 切换菜单\n\n      this.swiper.slideTo(tabIndex); // 菜单项居中动画\n\n      if (curTab.mescroll) {\n        var tabsContent = this.$refs.tabsContent;\n        var tabDom = tabsContent.getElementsByClassName('tab')[tabIndex];\n        var star = tabsContent.scrollLeft; // 当前位置\n\n        var end = tabDom.offsetLeft + tabDom.clientWidth / 2 - document.body.clientWidth / 2; // 居中\n\n        this.tabScrollLeft = end;\n        curTab.mescroll.getStep(star, end, function (step) {\n          tabsContent.scrollLeft = step; // 从当前位置逐渐移动到中间位置,默认时长300ms\n        });\n      }\n\n      if (newTab.mescroll) {\n        if (!newTab.isListInit) {\n          // 加载列表\n          newTab.mescroll.triggerDownScroll(); //主动触发下拉回调\n\n          console.log(\"触发下拉回调\");\n        } else {\n          // 检查新转换的列表是否需要显示回到到顶按钮\n          setTimeout(function () {\n            var curScrollTop = newTab.mescroll.getScrollTop();\n\n            if (curScrollTop >= newTab.mescroll.optUp.toTop.offset) {\n              newTab.mescroll.showTopBtn();\n            } else {\n              newTab.mescroll.hideTopBtn();\n            }\n          }, 30);\n        }\n      }\n    },\n\n    /* 下拉刷新的回调 */\n    downCallback: function downCallback(mescroll) {\n      // 这里加载你想下拉刷新的数据, 比如刷新tab1的轮播数据\n      if (mescroll.tabIndex === 0) {// loadSwiper();\n      } else if (mescroll.tabIndex === 1) {// ....\n      } else if (mescroll.tabIndex === 2) {// ....\n      }\n\n      mescroll.resetUpScroll(); // 触发下拉刷新的回调,加载第一页的数据\n    },\n\n    /* 上拉加载的回调 page = {num:1, size:10}; num:当前页 从1开始, size:每页数据条数 */\n    upCallback: function upCallback(page, mescroll) {\n      var _this3 = this;\n\n      console.log(\"触发了上拉回调\");\n\n      if (mescroll.tabIndex === 0) {\n        // 可以单独处理每个tab的请求\n        this.axios.get('http://127.0.0.1:7000/square/hall', {\n          params: {\n            num: page.num,\n            // 页码\n            size: page.size // 每页长度\n\n          }\n        }).then(function (response) {\n          // 请求的列表数据\n          console.log(response.data); // 如果是第一页前十条数据\n\n          var arr = response.data;\n          console.log(arr);\n          _this3.tabs[mescroll.tabIndex].isListInit = true; // 标记列表已初始化,保证列表只初始化一次\n          // 如果是第一页需手动置空列表\n\n          if (page.num === 1) _this3.tabs[mescroll.tabIndex].list = []; // 把请求到的数据添加到列表\n\n          _this3.tabs[mescroll.tabIndex].list = _this3.tabs[mescroll.tabIndex].list.concat(arr); // 数据渲染成功后,隐藏下拉刷新的状态\n\n          _this3.$nextTick(function () {\n            mescroll.endSuccess(arr.length);\n          });\n        }).catch(function (e) {\n          // 联网失败的回调,隐藏下拉刷新和上拉加载的状态;\n          if (page.num === 1) _this3.tabs[mescroll.tabIndex].isListInit = false;\n          mescroll.endErr();\n        });\n      } else if (mescroll.tabIndex === 1) {\n        // 可以单独处理每个tab的请求\n        this.axios.get('http://127.0.0.1:7000/square/focusList', {\n          params: {\n            uid: this.$store.getters.getUid,\n            //假设当前是3号用户\n            num: page.num,\n            // 页码\n            size: page.size // 每页长度 \n\n          }\n        }).then(function (response) {\n          _this3.tabs[mescroll.tabIndex].isListInit = true; // 标记列表已初始化,保证列表只初始化一次\n          // 请求的列表数据\n          // console.log(response.data)\n          // 如果是第一页前十条数据\n\n          console.log(response);\n          var arr = response.data;\n          console.log(_this3.tabs[mescroll.tabIndex]); // 如果是第一页需手动置空列表\n\n          if (page.num === 1) _this3.tabs[mescroll.tabIndex].list = []; // 把请求到的数据添加到列表\n\n          _this3.tabs[mescroll.tabIndex].list = _this3.tabs[mescroll.tabIndex].list.concat(arr);\n          console.log(_this3.tabs[mescroll.tabIndex]); // 数据渲染成功后,隐藏下拉刷新的状态  \n\n          _this3.$nextTick(function () {\n            mescroll.endSuccess(arr.length);\n          });\n        }).catch(function (e) {\n          // 联网失败的回调,隐藏下拉刷新和上拉加载的状态;\n          if (page.num === 1) _this3.tabs[mescroll.tabIndex].isListInit = false;\n          mescroll.endErr();\n        });\n      } else if (mescroll.tabIndex === 2) {\n        // 可以单独处理每个tab的请求\n        this.axios.get('http://127.0.0.1:7000/square/getScanned', {\n          params: {\n            uid: this.$store.getters.getUid,\n            //假设当前是3号用户\n            num: page.num,\n            // 页码\n            size: page.size // 每页长度 \n\n          }\n        }).then(function (response) {\n          // 请求的列表数据\n          // console.log(response.data)\n          // 如果是第一页前十条数据\n          console.log(response);\n          var arr = response.data;\n          console.log(_this3.tabs[mescroll.tabIndex]);\n          _this3.tabs[mescroll.tabIndex].isListInit = true; // 标记列表已初始化,保证列表只初始化一次\n          // 如果是第一页需手动置空列表\n\n          if (page.num === 1) _this3.tabs[mescroll.tabIndex].list = []; // 把请求到的数据添加到列表\n\n          _this3.tabs[mescroll.tabIndex].list = _this3.tabs[mescroll.tabIndex].list.concat(arr);\n          console.log(_this3.tabs[mescroll.tabIndex]); // 数据渲染成功后,隐藏下拉刷新的状态  \n\n          _this3.$nextTick(function () {\n            mescroll.endSuccess(arr.length);\n          });\n        }).catch(function (e) {\n          // 联网失败的回调,隐藏下拉刷新和上拉加载的状态;\n          if (page.num === 1) _this3.tabs[mescroll.tabIndex].isListInit = false;\n          mescroll.endErr();\n        });\n      } else if (mescroll.tabIndex === 3) {\n        // 可以单独处理每个tab的请求\n        this.axios.get('http://127.0.0.1:7000/square/hall', {\n          params: {\n            num: page.num,\n            // 页码\n            size: page.size // 每页长度 \n\n          }\n        }).then(function (response) {\n          // 请求的列表数据\n          // console.log(response.data)\n          // 如果是第一页前十条数据\n          console.log(response);\n          var arr = response.data;\n          console.log(_this3.tabs[mescroll.tabIndex]);\n          _this3.tabs[mescroll.tabIndex].isListInit = true; // 标记列表已初始化,保证列表只初始化一次\n          // 如果是第一页需手动置空列表\n\n          if (page.num === 1) _this3.tabs[mescroll.tabIndex].list = []; // 把请求到的数据添加到列表\n\n          _this3.tabs[mescroll.tabIndex].list = _this3.tabs[mescroll.tabIndex].list.concat(arr);\n          console.log(_this3.tabs[mescroll.tabIndex]); // 数据渲染成功后,隐藏下拉刷新的状态  \n\n          _this3.$nextTick(function () {\n            mescroll.endSuccess(arr.length);\n          });\n        }).catch(function (e) {\n          // 联网失败的回调,隐藏下拉刷新和上拉加载的状态;\n          if (page.num === 1) _this3.tabs[mescroll.tabIndex].isListInit = false;\n          mescroll.endErr();\n        });\n      }\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    // 如果没有配置回到顶部按钮或isBounce,则beforeRouteEnter不用写\n    next(function (vm) {\n      var curMescroll = vm.$refs['mescroll' + vm.curIndex]; // 找到当前mescroll的ref,调用子组件mescroll-vue的beforeRouteEnter方法\n\n      curMescroll && curMescroll.beforeRouteEnter(); // 进入路由时,滚动到原来的列表位置,恢复回到顶部按钮和isBounce的配置\n      // 恢复水平菜单的滚动条位置\n\n      if (vm.$refs.tabsContent) vm.$refs.tabsContent.scrollLeft = vm.tabScrollLeft;\n    });\n  },\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    // 如果没有配置回到顶部按钮或isBounce,则beforeRouteLeave不用写\n    var curMescroll = this.$refs['mescroll' + this.curIndex]; // 找到当前mescroll的ref,调用子组件mescroll-vue的beforeRouteEnter方法\n\n    curMescroll && curMescroll.beforeRouteLeave(); // 退出路由时,记录列表滚动的位置,隐藏回到顶部按钮和isBounce的配置\n\n    next();\n  }\n};",{"version":3,"sources":["square.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"square\">\r\n    <!--标题-->\r\n    <div class=\"header\" :class=\"{whiteBg:isWhiteBg}\">\r\n        <div class=\"header-box\">\r\n            <!-- <div class=\"moving\">\r\n                <a href=\"\"> <img src=\"http://127.0.0.1:7000/img/hall_new_trends_white.png\" alt=\"\" class=\"headImg\"></a>\r\n            </div> -->\r\n            <a href=\"\" class=\"moving headImg\" :class=\"{grayMoving:isgrayMoving}\"></a>\r\n      <!--菜单. 如果up配置了isBounce为false,则需加上mescroll-touch-x,原因: http://www.mescroll.com/qa.html#q10 -->\r\n            <div class=\"tabs-warp\">\r\n                <div ref=\"tabsContent\" class=\"tabs-content mescroll-touch-x\">\r\n                    <div style=\"display: inline-block\"> <!--PC端运行,加上这个div可修复tab-bar错位的问题 -->\r\n                    <ul class=\"tabs\" ref=\"tabs\">\r\n                        <li class=\"tab\" v-for=\"(tab,i) in tabs\" :class=\"{active: i===curIndex,fontColor:isfontBlack}\" :style=\"{width: tabWidth+'px'}\" :key=\"i\" @click=\"changeTab(i)\">{{tab.name}}</li>\r\n                    </ul>\r\n                    <div class=\"tab-bar\" :style=\"{width: barWidth+'px', left: barLeft}\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!-- <div class=\"search\">\r\n                <a href=\"\"><img src=\"http://127.0.0.1:7000/img/hall_search_white.png\" alt=\"\" class=\"headImg\"></a>\r\n            </div> -->\r\n            <a href=\"\" class=\"search headImg\" :class=\"{graySearch:isgraySearch}\"></a>\r\n        </div>\r\n    </div>\r\n    <!--轮播-->\r\n    <swiper ref=\"mySwiper\" :options=\"swiperOption\">\r\n      <!--大厅-->\r\n      <swiper-slide>\r\n        <mescroll-vue ref=\"mescroll0\" :down=\"getMescrollDown(0)\" :up=\"getMescrollUp(0)\" @init=\"mescrollInit(0,arguments)\">\r\n          <div id=\"dataList0\">\r\n            <div class=\"hall\">\r\n                <div class=\"banner\">\r\n                    <mt-swipe :auto=\"5000\" :continuous=\"true\">\r\n                        <mt-swipe-item>\r\n                            <img src=\"//127.0.0.1:7000/img/01ed6558f5c863a8012049efb6f345.jpg@2o.jpg\" alt=\"\">\r\n                        </mt-swipe-item>\r\n                        <mt-swipe-item>\r\n                            <img src=\"//127.0.0.1:7000/img/01356d554337fd0000019ae9ceb332.jpg@2o.jpg\" alt=\"\">\r\n                        </mt-swipe-item>\r\n                        <mt-swipe-item>\r\n                            <img src=\"//127.0.0.1:7000/img/01f7a95543380c0000019ae9819de6.jpg@2o.jpg\" alt=\"\">\r\n                        </mt-swipe-item>\r\n                    </mt-swipe>\r\n                </div>\r\n                <div class=\"imgList\">\r\n                    <div class=\"cf recommend\">\r\n                        <div class=\"imgBox\" v-for=\"(item,index) in tabs[0].list.slice(0,3)\" :key=\"index\"  @click=\"record({id:item.id,hallBg_src:item.hallBg_src,hallRanking_src:item.hallRanking_src,RankIcon_src:item.RankIcon_src,sign:item.sign,watchIcon_src:item.watchIcon_src,\r\nwatchNum:item.watchNum,uid:$store.getters.getUid,sourceSrc:item.sourceSrc});getSourceSrc({id:item.id,hallBg_src:item.hallBg_src,hallRanking_src:item.hallRanking_src,RankIcon_src:item.RankIcon_src,sign:item.sign,watchIcon_src:item.watchIcon_src,\r\nwatchNum:item.watchNum,uid:$store.getters.getUid,sourceSrc:item.sourceSrc})\">\r\n                            <div class=\"bgPic\">\r\n                                <img src=\"../img/defalt_big_image_live2.png\" alt=\"\" :imgurl=\"item.hallBg_src\">\r\n                                <!-- <img :src=\"item.hallBg_src\" alt=\"\"> -->\r\n                                <div class=\"infoBox\">\r\n                                      <div class=\"info\">\r\n                                          <div class=\"ranking\"><img :src=\"item.hallRanking_src\" alt=\"\"><img :src=\"item.RankIcon_src\" alt=\"\"></div>\r\n                                          <div class=\"sign\">{{item.sign}}</div>\r\n                                          <div class=\"watching\"><img :src=\"item.watchIcon_src\" alt=\"\"><span>{{item.watchNum}}</span></div>\r\n                                      </div>\r\n                                </div>               \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                  <!-- 楼层  甜美主播 -->\r\n                    <div class=\"floor\">\r\n                        <div class=\"sweetTittle\">\r\n                            <img src=\"//127.0.0.1:7000/img/hall_anchor_classfy_bar.png\" alt=\"\">\r\n                            <span>甜美主播</span>\r\n                        </div>\r\n                        <div class=\"cf sweet\">\r\n                            <div class=\"imgBox\" v-for=\"(item,index) in tabs[0].list.slice(3,9)\" :key=\"index\" href=\"\"  @click=\"record({id:item.id,hallBg_src:item.hallBg_src,hallRanking_src:item.hallRanking_src,RankIcon_src:item.RankIcon_src,sign:item.sign,watchIcon_src:item.watchIcon_src,\r\nwatchNum:item.watchNum,uid:$store.getters.getUid,sourceSrc:item.sourceSrc});getSourceSrc({id:item.id,hallBg_src:item.hallBg_src,hallRanking_src:item.hallRanking_src,RankIcon_src:item.RankIcon_src,sign:item.sign,watchIcon_src:item.watchIcon_src,\r\nwatchNum:item.watchNum,uid:$store.getters.getUid,sourceSrc:item.sourceSrc})\">\r\n                                <div class=\"bgPic\">\r\n                                    <img src=\"../img/defalt_big_image_live2.png\" alt=\"\" :imgurl=\"item.hallBg_src\">\r\n                                        <!-- <img :src=\"item.hallBg_src\" alt=\"\"> -->\r\n                                    <div class=\"infoBox\">\r\n                                          <div class=\"info\">\r\n                                              <div class=\"ranking\"><img :src=\"item.hallRanking_src\" alt=\"\"><img :src=\"item.RankIcon_src\" alt=\"\"></div>\r\n                                              <div class=\"sign\">{{item.sign}}</div>\r\n                                              <div class=\"watching\"><img :src=\"item.watchIcon_src\" alt=\"\"><span>{{item.watchNum}}</span></div>\r\n                                          </div>\r\n                                    </div>               \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- 楼层  魅力主播 -->\r\n                    <div class=\"floor\">\r\n                        <div class=\"sweetTittle\">\r\n                            <img src=\"//127.0.0.1:7000/img/hall_anchor_classfy_bar.png\" alt=\"\">\r\n                            <span>魅力主播</span>\r\n                        </div>\r\n                        <div class=\"cf sweet\">\r\n                            <div class=\"imgBox\" v-for=\"(item,index) in tabs[0].list.slice(9)\" :key=\"index\" href=\"\"  @click=\"record({id:item.id,hallBg_src:item.hallBg_src,hallRanking_src:item.hallRanking_src,RankIcon_src:item.RankIcon_src,sign:item.sign,watchIcon_src:item.watchIcon_src,\r\nwatchNum:item.watchNum,uid:$store.getters.getUid,sourceSrc:item.sourceSrc});getSourceSrc({id:item.id,hallBg_src:item.hallBg_src,hallRanking_src:item.hallRanking_src,RankIcon_src:item.RankIcon_src,sign:item.sign,watchIcon_src:item.watchIcon_src,\r\nwatchNum:item.watchNum,uid:$store.getters.getUid,sourceSrc:item.sourceSrc})\">\r\n                                <div class=\"bgPic\">\r\n                                    <img :imgurl=\"item.hallBg_src\" alt=\"\" src=\"../img/defalt_big_image_live2.png\">\r\n                                    <!-- <img :src=\"item.hallBg_src\" alt=\"\"> -->\r\n                                    <div class=\"infoBox\">\r\n                                          <div class=\"info\">\r\n                                              <div class=\"ranking\"><img :src=\"item.hallRanking_src\" alt=\"\"><img :src=\"item.RankIcon_src\" alt=\"\"></div>\r\n                                              <div class=\"sign\">{{item.sign}}</div>\r\n                                              <div class=\"watching\"><img :src=\"item.watchIcon_src\" alt=\"\"><span>{{item.watchNum}}</span></div>\r\n                                          </div>\r\n                                    </div>               \r\n                                </div>\r\n                            </div>\r\n                         \r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n          </div>\r\n        </mescroll-vue>\r\n      </swiper-slide>\r\n      <!-- 关注 可不配down-->\r\n      <swiper-slide>\r\n        <mescroll-vue ref=\"mescroll1\" :up=\"getMescrollUp(1)\" @init=\"mescrollInit(1,arguments)\">\r\n          <div id=\"dataList1\">\r\n            <div class=\"cf sweet\">\r\n                         <div class=\"imgBox\" v-for=\"(item,index) in tabs[1].list\" :key=\"index\" @click=\"getSourceSrc({id:item.hid,hallBg_src:item.hallBg_src,hallRanking_src:item.hallRanking_src,RankIcon_src:item.RankIcon_src,sign:item.sign,watchIcon_src:item.watchIcon_src,\r\nwatchNum:item.watchNum,uid:$store.getters.getUid,sourceSrc:item.sourceSrc})\">\r\n                            <div class=\"bgPic\">\r\n                                <img :imgurl=\"item.hallBg_src\" alt=\"\" src=\"../img/defalt_big_image_live2.png\">\r\n                                    <!-- <img :src=\"item.hallBg_src\" alt=\"\"> -->\r\n                                <div class=\"infoBox\">\r\n                                      <div class=\"info\">\r\n                                          <div class=\"ranking\">\r\n                                            <img :src=\"item.hallRanking_src\" alt=\"\"><img :src=\"item.RankIcon_src\" alt=\"\">\r\n                                            </div>\r\n                                          <div class=\"sign\">{{item.sign}}</div>\r\n                                          <div class=\"watching\"><img :src=\"item.watchingIcon_src\" alt=\"\"><span>{{item.watchNum}}</span></div>\r\n                                      </div>\r\n                                </div>               \r\n                            </div>\r\n                        </div>\r\n                </div>\r\n          </div>\r\n        </mescroll-vue>\r\n      </swiper-slide>\r\n      <!-- 最近观看-->\r\n      <swiper-slide>\r\n        <mescroll-vue ref=\"mescroll2\" :up=\"getMescrollUp(2)\" @init=\"mescrollInit(2,arguments)\">\r\n          <div id=\"dataList2\">\r\n           <div class=\"cf sweet\">\r\n                         <div class=\"imgBox\" v-for=\"(item,index) in tabs[2].list\" :key=\"index\" @click=\"getSourceSrc({id:item.hid,hallBg_src:item.hallBg_src,hallRanking_src:item.hallRanking_src,RankIcon_src:item.RankIcon_src,sign:item.sign,watchIcon_src:item.watchIcon_src,\r\nwatchNum:item.watchNum,uid:$store.getters.getUid,sourceSrc:item.sourceSrc})\">\r\n                            <div class=\"bgPic\">\r\n                                <img :imgurl=\"item.hallBg_src\" alt=\"\" src=\"../img/defalt_big_image_live2.png\">\r\n                                <div class=\"infoBox\">\r\n                                      <div class=\"info\">\r\n                                          <div class=\"ranking\"><img :src=\"item.hallRanking_src\" alt=\"\"><img :src=\"item.RankIcon_src\" alt=\"\"></div>\r\n                                          <div class=\"sign\">{{item.sign}}</div>\r\n                                          <div class=\"watching\"><img :src=\"item.watchIcon_src\" alt=\"\"><span>{{item.watchNum}}</span></div>\r\n                                      </div>\r\n                                </div>               \r\n                            </div>\r\n                        </div>\r\n                </div>\r\n          </div>\r\n        </mescroll-vue>\r\n      </swiper-slide>\r\n      <!-- pk-->\r\n      <swiper-slide>\r\n        <mescroll-vue ref=\"mescroll3\" :up=\"getMescrollUp(3)\" @init=\"mescrollInit(3,arguments)\">\r\n          <div id=\"dataList3\">\r\n           <div class=\"cf sweet\">\r\n                         <div class=\"imgBox\" v-for=\"(item,index) in tabs[3].list\" :key=\"index\">\r\n                            <div class=\"bgPic\">\r\n                                <img :imgurl=\"item.hallBg_src\" alt=\"\" src=\"../img/defalt_big_image_live2.png\">\r\n                                <div class=\"infoBox\">\r\n                                      <div class=\"info\">\r\n                                          <div class=\"ranking\"><img :src=\"item.hallRanking_src\" alt=\"\"><img :src=\"item.RankIcon_src\" alt=\"\"></div>\r\n                                          <div class=\"sign\">{{item.sign}}</div>\r\n                                          <div class=\"watching\"><img :src=\"item.watchingIcon_src\" alt=\"\"><span>{{item.watchNum}}</span></div>\r\n                                      </div>\r\n                                </div>               \r\n                            </div>\r\n                        </div>\r\n                </div>\r\n          </div>\r\n        </mescroll-vue>\r\n      </swiper-slide>\r\n      <!-- 新秀-->\r\n      <swiper-slide>\r\n        <mescroll-vue ref=\"mescroll4\" :up=\"getMescrollUp(4)\" @init=\"mescrollInit(4,arguments)\">\r\n          <ul id=\"dataList4\">\r\n            <li class=\"data-li\" v-for=\"pd in tabs[4].list\" :key=\"pd.id\">\r\n              <img class=\"pd-img\" :src=\"pd.pdImg\"/>\r\n              <div class=\"pd-name\">{{pd.pdName}}</div>\r\n              <p class=\"pd-price\">{{pd.pdPrice}} 元</p>\r\n              <p class=\"pd-sold\">已售{{pd.pdSold}}件</p>\r\n            </li>\r\n          </ul>\r\n        </mescroll-vue>\r\n      </swiper-slide>\r\n      <!-- 好声音-->\r\n      <swiper-slide>\r\n        <mescroll-vue ref=\"mescroll5\" :up=\"getMescrollUp(5)\" @init=\"mescrollInit(5,arguments)\">\r\n          <ul id=\"dataList5\">\r\n            <li class=\"data-li\" v-for=\"pd in tabs[5].list\" :key=\"pd.id\">\r\n              <img class=\"pd-img\" :src=\"pd.pdImg\"/>\r\n              <div class=\"pd-name\">{{pd.pdName}}</div>\r\n              <p class=\"pd-price\">{{pd.pdPrice}} 元</p>\r\n              <p class=\"pd-sold\">已售{{pd.pdSold}}件</p>\r\n            </li>\r\n          </ul>\r\n        </mescroll-vue>\r\n      </swiper-slide>\r\n      <!-- 萌妹子-->\r\n      <swiper-slide>\r\n        <mescroll-vue ref=\"mescroll6\" :up=\"getMescrollUp(6)\" @init=\"mescrollInit(6,arguments)\">\r\n          <ul id=\"dataList6\">\r\n            <li class=\"data-li\" v-for=\"pd in tabs[6].list\" :key=\"pd.id\">\r\n              <img class=\"pd-img\" :src=\"pd.pdImg\"/>\r\n              <div class=\"pd-name\">{{pd.pdName}}</div>\r\n              <p class=\"pd-price\">{{pd.pdPrice}} 元</p>\r\n              <p class=\"pd-sold\">已售{{pd.pdSold}}件</p>\r\n            </li>\r\n          </ul>\r\n        </mescroll-vue>\r\n      </swiper-slide>\r\n      <!-- 够劲爆-->\r\n      <swiper-slide>\r\n        <mescroll-vue ref=\"mescroll7\" :up=\"getMescrollUp(7)\" @init=\"mescrollInit(7,arguments)\">\r\n          <ul id=\"dataList7\">\r\n            <li class=\"data-li\" v-for=\"pd in tabs[7].list\" :key=\"pd.id\">\r\n              <img class=\"pd-img\" :src=\"pd.pdImg\"/>\r\n              <div class=\"pd-name\">{{pd.pdName}}</div>\r\n              <p class=\"pd-price\">{{pd.pdPrice}} 元</p>\r\n              <p class=\"pd-sold\">已售{{pd.pdSold}}件</p>\r\n            </li>\r\n          </ul>\r\n        </mescroll-vue>\r\n      </swiper-slide>\r\n      <!-- 同城-->\r\n      <swiper-slide>\r\n        <mescroll-vue ref=\"mescroll8\" :up=\"getMescrollUp(8)\" @init=\"mescrollInit(8,arguments)\">\r\n          <ul id=\"dataList8\">\r\n            <li class=\"data-li\" v-for=\"pd in tabs[8].list\" :key=\"pd.id\">\r\n              <img class=\"pd-img\" :src=\"pd.pdImg\"/>\r\n              <div class=\"pd-name\">{{pd.pdName}}</div>\r\n              <p class=\"pd-price\">{{pd.pdPrice}} 元</p>\r\n              <p class=\"pd-sold\">已售{{pd.pdSold}}件</p>\r\n            </li>\r\n          </ul>\r\n        </mescroll-vue>\r\n      </swiper-slide>\r\n      <!-- 热舞-->\r\n      <swiper-slide>\r\n        <mescroll-vue ref=\"mescroll9\" :up=\"getMescrollUp(9)\" @init=\"mescrollInit(9,arguments)\">\r\n          <ul id=\"dataList9\">\r\n            <li class=\"data-li\" v-for=\"pd in tabs[9].list\" :key=\"pd.id\">\r\n              <img class=\"pd-img\" :src=\"pd.pdImg\"/>\r\n              <div class=\"pd-name\">{{pd.pdName}}</div>\r\n              <p class=\"pd-price\">{{pd.pdPrice}} 元</p>\r\n              <p class=\"pd-sold\">已售{{pd.pdSold}}件</p>\r\n            </li>\r\n          </ul>\r\n        </mescroll-vue>\r\n      </swiper-slide>\r\n      <!-- 手机-->\r\n      <swiper-slide>\r\n        <mescroll-vue ref=\"mescroll10\" :up=\"getMescrollUp(10)\" @init=\"mescrollInit(10,arguments)\">\r\n          <ul id=\"dataList10\">\r\n            <li class=\"data-li\" v-for=\"pd in tabs[10].list\" :key=\"pd.id\">\r\n              <img class=\"pd-img\" :src=\"pd.pdImg\"/>\r\n              <div class=\"pd-name\">{{pd.pdName}}</div>\r\n              <p class=\"pd-price\">{{pd.pdPrice}} 元</p>\r\n              <p class=\"pd-sold\">已售{{pd.pdSold}}件</p>\r\n            </li>\r\n          </ul>\r\n        </mescroll-vue>\r\n      </swiper-slide>\r\n      <!-- 代言人-->\r\n      <swiper-slide>\r\n        <mescroll-vue ref=\"mescroll11\" :up=\"getMescrollUp(11)\" @init=\"mescrollInit(11,arguments)\">\r\n          <ul id=\"dataList11\">\r\n            <li class=\"data-li\" v-for=\"pd in tabs[11].list\" :key=\"pd.id\">\r\n              <img class=\"pd-img\" :src=\"pd.pdImg\"/>\r\n              <div class=\"pd-name\">{{pd.pdName}}</div>\r\n              <p class=\"pd-price\">{{pd.pdPrice}} 元</p>\r\n              <p class=\"pd-sold\">已售{{pd.pdSold}}件</p>\r\n            </li>\r\n          </ul>\r\n        </mescroll-vue>\r\n      </swiper-slide>\r\n    </swiper>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 轮播组件: https://github.com/surmon-china/vue-awesome-swiper\r\nimport 'swiper/dist/css/swiper.css'\r\nimport { swiper, swiperSlide } from 'vue-awesome-swiper'\r\n// 引入mescroll的vue组件\r\nimport MescrollVue from 'mescroll.js/mescroll.vue'\r\nimport { setTimeout } from 'timers';\r\n// 模拟数据\r\n// import mockData from '../mock/pdlist'\r\n\r\nexport default {\r\n  name: 'square',\r\n  data () { \r\n    return {\r\n      tabs: [{name: '大厅', mescroll: null, list: [], isListInit: false}, {name: '关注', mescroll: null, list: [], isListInit: false}, {name: '最近观看', mescroll: null, list: [], isListInit: false}, {name: '新秀', mescroll: null, list: [], isListInit: false}, {name: 'pk', mescroll: null, list: [], isListInit: false}, {name: '好声音', mescroll: null, list: [], isListInit: false}, {name: '萌妹子', mescroll: null, list: [], isListInit: false}, {name: '够劲爆', mescroll: null, list: [], isListInit: false}, {name: '同城', mescroll: null, list: [], isListInit: false}, {name: '热舞', mescroll: null, list: [], isListInit: false}, {name: '手机', mescroll: null, list: [], isListInit: false}, {name: '代言人', mescroll: null, list: [], isListInit: false}],\r\n      tabWidth: 60, // 每个tab的宽度\r\n      barWidth: 30, // tab底部红色线的宽度\r\n      curIndex: 0, // 当前tab的下标,遍历list时不能用tabs[curIndex]，因为curIndex每次切换tab会变化，导致页面不能缓存\r\n      tabScrollLeft: 0, // 菜单滚动条的位置\r\n      swiperOption: { // 轮播配置\r\n        on: {\r\n          transitionEnd: () => {\r\n            this.changeTab(this.swiper.activeIndex)\r\n          }\r\n        }\r\n      },\r\n      isWhiteBg:false,//菜单背景\r\n      isfontBlack:false,//菜单字体颜色\r\n      isgrayMoving:false,//菜单动态图标\r\n      isgraySearch:false//菜单搜索图标\r\n    }\r\n  },\r\n  components: {\r\n    swiper, // 轮播组件\r\n    swiperSlide, // 轮播组件\r\n    MescrollVue // Mescroll组件\r\n  },\r\n  computed: {\r\n    swiper () { // 轮播对象\r\n    console.log(this.$refs.mySwiper.swiper)\r\n      return this.$refs.mySwiper.swiper\r\n    },\r\n    barLeft () { // 红线的位置\r\n      return (this.tabWidth * this.curIndex + (this.tabWidth - this.barWidth) / 2) + 'px'\r\n    }\r\n  },\r\n  methods: {\r\n    //跳转到live（直播）组件，并把主播信息参数传递过去\r\n    //获取视频源地址并修改原来的地址\r\n    getSourceSrc({id,hallBg_src,hallRanking_src,RankIcon_src,sign,watchIcon_src,watchNum,uid,sourceSrc}){\r\n      //取消通过发送ajax来获取视频源地址\r\n      // this.axios.get(\"http://127.0.0.1:7000/square/sourceSrc\",{\r\n      //   params:{\r\n      //     id:id\r\n      //   }\r\n      // }\r\n      // ).then(res=>{\r\n      //     console.log(res.data)\r\n      //     //修改vuex里面的视频源地址\r\n      //     this.$store.commit('mutSourceSrc',res.data[0].sourceSrc)\r\n      // })\r\n      //采用在视频列表加载时获得源地址\r\n        this.$store.commit('mutSourceSrc',sourceSrc)\r\n        console.log(this.$store.getters.getSourceSrc)\r\n      //修改源地址后再跳转到直播页面\r\n      setTimeout(()=>{//.5s延迟让其他点击事件先执行完\r\n        this.$router.push({name:'live',params:{hid:id,hallBg_src:hallBg_src,hallRanking_src:hallRanking_src, RankIcon_src:RankIcon_src,sign:sign,watchIcon_src:watchIcon_src,watchNum:watchNum,uid:uid,sourceSrc:sourceSrc}})\r\n      },300)\r\n    },\r\n    //保存观看记录\r\n    record({id,hallBg_src,hallRanking_src,RankIcon_src,sign,watchIcon_src,watchNum,uid,sourceSrc}){\r\n      //记录当前用户的观看当前的主播信息\r\n      this.axios.post(\"http://127.0.0.1:7000/square/saveScanned\",\r\n        this.qs.stringify({   \r\n            hid:id,//当前点击观看的主播id\r\n            hallBg_src:hallBg_src,\r\n            hallRanking_src:hallRanking_src,\r\n            RankIcon_src:RankIcon_src,\r\n            sign:sign,\r\n            watchIcon_src:watchIcon_src,\r\n            watchNum:watchNum,\r\n            uid:uid,//假设当前的用户3对应的id\r\n            sourceSrc:sourceSrc\r\n        })\r\n      )\r\n    },\r\n    // 多mescroll的配置,需通过方法获取,保证每个配置是单例\r\n    getMescrollDown (tabIndex) {\r\n      let isAuto = tabIndex === 0; // 第一个mescroll传入true,列表自动加载\r\n      return {\r\n        auto: isAuto,\r\n        callback: this.downCallback\r\n      }\r\n    },\r\n    // mescroll上拉加载的配置\r\n    getMescrollUp (tabIndex) {\r\n      let emptyWarpId = 'dataList' + tabIndex;\r\n      return {\r\n        lazyLoad: {\r\n\t\t        \tuse: true, // 是否开启懒加载,默认false\r\n\t\t\t        attr: 'imgurl', // 网络地址的属性名 (图片加载成功会移除该属性): <img imgurl='网络图  src='占位图''/>\r\n\t\t\t        showClass: 'mescroll-lazy-in', // 图片加载成功的显示动画: 渐变显示,参见mescroll.css\r\n\t\t\t        delay: 500, // 列表滚动的过程中每500ms检查一次图片是否在可视区域,如果在可视区域则加载图片\r\n\t\t\t        offset: 200 // 超出可视区域200px的图片仍可触发懒加载,目的是提前加载部分图片\r\n\t\t    \t},\r\n        auto: false,\r\n        htmlNodata:'<p class=\"upwarp-nodata\">没有更多...</p>',\r\n        callback: this.upCallback, // 上拉回调,此处可简写; 相当于 callback: function (page) { upCallback(page); }\r\n        noMoreSize: 0, // 如果列表已无数据,可设置列表的总数量要大于半页才显示无更多数据;避免列表数据过少(比如只有一条数据),显示无更多数据会不好看; 默认5\r\n        empty: {\r\n          warpId: emptyWarpId, // 父布局的id;\r\n          icon: '//127.0.0.1:7000/img/NotInfo.PNG', // 图标,默认null\r\n          tip: '暂无相关数据~', // 提示\r\n          // btntext: '去逛逛 >', // 按钮,默认\"\"\r\n          // btnClick: function () { // 点击按钮的回调,默认null\r\n          //   alert('点击了按钮,具体逻辑自行实现')\r\n          // }\r\n        },\r\n        toTop: { // 配置回到顶部按钮\r\n          src: 'http://www.mescroll.com/img/mescroll-totop.png' // 图片路径,默认null (建议写成网络图,不必考虑相对路径)\r\n        }\r\n      }\r\n    },\r\n    // mescroll初始化的回调\r\n    mescrollInit (tabIndex, arg) {\r\n      this.tabs[tabIndex].mescroll = arg[0]; // 传入mescroll对象\r\n      this.tabs[tabIndex].mescroll.tabIndex = tabIndex; // 加入标记,便于在回调中取到对应的list\r\n    },\r\n    // 切换菜单\r\n    changeTab (tabIndex) {\r\n      if (this.curIndex === tabIndex) return; // 避免重复调用\r\n      let curTab = this.tabs[this.curIndex];// 当前列表\r\n      let newTab = this.tabs[tabIndex];// 新转换的列表\r\n        //从第二个tab开始，tabNav字体颜色，和图片发生变化\r\n      if(tabIndex!==0){\r\n        this.isWhiteBg=true\r\n        this.isfontBlack=true\r\n        this.isgrayMoving=true\r\n        this.isgraySearch=true\r\n      }else{\r\n        this.isWhiteBg=false\r\n        this.isfontBlack=false\r\n        this.isgrayMoving=false\r\n        this.isgraySearch=false\r\n      }\r\n      curTab.mescroll && curTab.mescroll.hideTopBtn(); // 隐藏当前列表的回到顶部按钮\r\n      this.curIndex = tabIndex; // 切换菜单\r\n      this.swiper.slideTo(tabIndex);\r\n\r\n    \r\n\r\n      // 菜单项居中动画\r\n      if (curTab.mescroll) {\r\n        let tabsContent = this.$refs.tabsContent;\r\n        let tabDom = tabsContent.getElementsByClassName('tab')[tabIndex];\r\n        let star = tabsContent.scrollLeft;// 当前位置\r\n        let end = tabDom.offsetLeft + tabDom.clientWidth / 2 - document.body.clientWidth / 2; // 居中\r\n        this.tabScrollLeft = end;\r\n        curTab.mescroll.getStep(star, end, function (step) {\r\n          tabsContent.scrollLeft = step; // 从当前位置逐渐移动到中间位置,默认时长300ms\r\n        });\r\n      }\r\n      if (newTab.mescroll) {\r\n        if (!newTab.isListInit) {\r\n          // 加载列表\r\n          newTab.mescroll.triggerDownScroll();//主动触发下拉回调\r\n          console.log(\"触发下拉回调\")\r\n        } else {\r\n          // 检查新转换的列表是否需要显示回到到顶按钮\r\n          setTimeout(() => {\r\n            let curScrollTop = newTab.mescroll.getScrollTop();\r\n            if (curScrollTop >= newTab.mescroll.optUp.toTop.offset) {\r\n              newTab.mescroll.showTopBtn();\r\n            } else {\r\n              newTab.mescroll.hideTopBtn();\r\n            }\r\n          }, 30)\r\n        }\r\n      }\r\n    },\r\n    /* 下拉刷新的回调 */\r\n    downCallback (mescroll) {\r\n      // 这里加载你想下拉刷新的数据, 比如刷新tab1的轮播数据\r\n      if (mescroll.tabIndex === 0) {\r\n        // loadSwiper();\r\n      } else if (mescroll.tabIndex === 1) {\r\n        // ....\r\n      } else if (mescroll.tabIndex === 2) {\r\n        // ....\r\n      }\r\n      mescroll.resetUpScroll();// 触发下拉刷新的回调,加载第一页的数据\r\n    },\r\n    /* 上拉加载的回调 page = {num:1, size:10}; num:当前页 从1开始, size:每页数据条数 */\r\n    upCallback (page, mescroll) {\r\n         console.log(\"触发了上拉回调\") \r\n     if (mescroll.tabIndex === 0) {     \r\n        // 可以单独处理每个tab的请求\r\n         this.axios.get('http://127.0.0.1:7000/square/hall', {\r\n\t\t\t        params: {\r\n\t\t\t          num: page.num, // 页码\r\n\t\t\t          size:page.size// 每页长度\r\n\t\t\t        }\r\n\t\t\t      }).then((response) => {\r\n                    // 请求的列表数据\r\n                    console.log(response.data)\r\n              // 如果是第一页前十条数据\r\n              let arr =response.data\r\n              console.log(arr)\r\n              this.tabs[mescroll.tabIndex].isListInit = true;// 标记列表已初始化,保证列表只初始化一次\r\n\t\t\t        // 如果是第一页需手动置空列表\r\n\t\t\t        if (page.num === 1) this.tabs[mescroll.tabIndex].list = [];\r\n\t\t\t        // 把请求到的数据添加到列表\r\n              this.tabs[mescroll.tabIndex].list = this.tabs[mescroll.tabIndex].list.concat(arr)\r\n\t\t\t        // 数据渲染成功后,隐藏下拉刷新的状态\r\n\t\t\t        this.$nextTick(() => {\r\n\t\t\t          mescroll.endSuccess(arr.length)\r\n\t\t\t        })\r\n\t\t\t      }).catch((e) => {\r\n              // 联网失败的回调,隐藏下拉刷新和上拉加载的状态;\r\n               if (page.num === 1) this.tabs[mescroll.tabIndex].isListInit = false;\r\n\t\t\t        mescroll.endErr()\r\n\t\t\t      })\r\n      }else if (mescroll.tabIndex === 1) {\r\n        // 可以单独处理每个tab的请求\r\n             this.axios.get('http://127.0.0.1:7000/square/focusList', {\r\n\t\t\t        params: {\r\n                uid:this.$store.getters.getUid,//假设当前是3号用户\r\n\t\t\t          num: page.num, // 页码\r\n\t\t\t          size:page.size// 每页长度 \r\n\t\t\t        }\r\n\t\t\t      }).then((response) => {\r\n                this.tabs[mescroll.tabIndex].isListInit = true;// 标记列表已初始化,保证列表只初始化一次\r\n                    // 请求的列表数据\r\n                    // console.log(response.data)\r\n              // 如果是第一页前十条数据\r\n              console.log(response)\r\n              let arr=response.data\r\n              console.log(this.tabs[mescroll.tabIndex])\r\n            \r\n\t\t\t        // 如果是第一页需手动置空列表\r\n\t\t\t        if (page.num === 1) this.tabs[mescroll.tabIndex].list = [];\r\n\t\t\t        // 把请求到的数据添加到列表\r\n              this.tabs[mescroll.tabIndex].list = this.tabs[mescroll.tabIndex].list.concat(arr)\r\n              console.log(this.tabs[mescroll.tabIndex])\r\n\t\t\t        // 数据渲染成功后,隐藏下拉刷新的状态  \r\n\t\t\t        this.$nextTick(() => {\r\n\t\t\t          mescroll.endSuccess(arr.length)\r\n\t\t\t        })\r\n\t\t\t      }).catch((e) => {\r\n              // 联网失败的回调,隐藏下拉刷新和上拉加载的状态;\r\n               if (page.num === 1) this.tabs[mescroll.tabIndex].isListInit = false;\r\n\t\t\t        mescroll.endErr()\r\n\t\t\t      })\r\n      }else if(mescroll.tabIndex === 2){\r\n            // 可以单独处理每个tab的请求\r\n             this.axios.get('http://127.0.0.1:7000/square/getScanned', {\r\n\t\t\t        params: {\r\n                uid:this.$store.getters.getUid,//假设当前是3号用户\r\n\t\t\t          num: page.num, // 页码\r\n\t\t\t          size:page.size// 每页长度 \r\n\t\t\t        }\r\n\t\t\t      }).then((response) => {\r\n                    // 请求的列表数据\r\n                    // console.log(response.data)\r\n              // 如果是第一页前十条数据\r\n              console.log(response)\r\n              let arr=response.data\r\n              console.log(this.tabs[mescroll.tabIndex])\r\n              this.tabs[mescroll.tabIndex].isListInit = true;// 标记列表已初始化,保证列表只初始化一次\r\n\t\t\t        // 如果是第一页需手动置空列表\r\n\t\t\t        if (page.num === 1) this.tabs[mescroll.tabIndex].list = [];\r\n\t\t\t        // 把请求到的数据添加到列表\r\n              this.tabs[mescroll.tabIndex].list = this.tabs[mescroll.tabIndex].list.concat(arr)\r\n              console.log(this.tabs[mescroll.tabIndex])\r\n\t\t\t        // 数据渲染成功后,隐藏下拉刷新的状态  \r\n\t\t\t        this.$nextTick(() => {\r\n\t\t\t          mescroll.endSuccess(arr.length)\r\n\t\t\t        })\r\n\t\t\t      }).catch((e) => {\r\n              // 联网失败的回调,隐藏下拉刷新和上拉加载的状态;\r\n               if (page.num === 1) this.tabs[mescroll.tabIndex].isListInit = false;\r\n\t\t\t        mescroll.endErr()\r\n\t\t\t      })\r\n      }else if(mescroll.tabIndex === 3){\r\n             // 可以单独处理每个tab的请求\r\n             this.axios.get('http://127.0.0.1:7000/square/hall', {\r\n\t\t\t        params: {\r\n\t\t\t          num: page.num, // 页码\r\n\t\t\t          size:page.size// 每页长度 \r\n\t\t\t        }\r\n\t\t\t      }).then((response) => {\r\n                    // 请求的列表数据\r\n                    // console.log(response.data)\r\n              // 如果是第一页前十条数据\r\n              console.log(response)\r\n              let arr=response.data\r\n              console.log(this.tabs[mescroll.tabIndex])\r\n              this.tabs[mescroll.tabIndex].isListInit = true;// 标记列表已初始化,保证列表只初始化一次\r\n\t\t\t        // 如果是第一页需手动置空列表\r\n\t\t\t        if (page.num === 1) this.tabs[mescroll.tabIndex].list = [];\r\n\t\t\t        // 把请求到的数据添加到列表\r\n              this.tabs[mescroll.tabIndex].list = this.tabs[mescroll.tabIndex].list.concat(arr)\r\n              console.log(this.tabs[mescroll.tabIndex])\r\n\t\t\t        // 数据渲染成功后,隐藏下拉刷新的状态  \r\n\t\t\t        this.$nextTick(() => {\r\n\t\t\t          mescroll.endSuccess(arr.length)\r\n\t\t\t        })\r\n\t\t\t      }).catch((e) => {\r\n              // 联网失败的回调,隐藏下拉刷新和上拉加载的状态;\r\n               if (page.num === 1) this.tabs[mescroll.tabIndex].isListInit = false;\r\n\t\t\t        mescroll.endErr()\r\n\t\t\t      })\r\n      } \r\n     \r\n    },\r\n   \r\n  },\r\n  beforeRouteEnter (to, from, next) { // 如果没有配置回到顶部按钮或isBounce,则beforeRouteEnter不用写\r\n    next(vm => {\r\n      let curMescroll = vm.$refs['mescroll' + vm.curIndex]; // 找到当前mescroll的ref,调用子组件mescroll-vue的beforeRouteEnter方法\r\n      curMescroll && curMescroll.beforeRouteEnter() // 进入路由时,滚动到原来的列表位置,恢复回到顶部按钮和isBounce的配置\r\n      // 恢复水平菜单的滚动条位置\r\n      if (vm.$refs.tabsContent) vm.$refs.tabsContent.scrollLeft = vm.tabScrollLeft;\r\n    })\r\n  },\r\n  beforeRouteLeave (to, from, next) { // 如果没有配置回到顶部按钮或isBounce,则beforeRouteLeave不用写\r\n    let curMescroll = this.$refs['mescroll' + this.curIndex]; // 找到当前mescroll的ref,调用子组件mescroll-vue的beforeRouteEnter方法\r\n    curMescroll && curMescroll.beforeRouteLeave() // 退出路由时,记录列表滚动的位置,隐藏回到顶部按钮和isBounce的配置\r\n    next()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    /* 刷新的高度 */\r\n    /* .swiper-container{\r\n        top:0px;\r\n    } */\r\n  /*模拟的标题*/\r\n  .header{\r\n    z-index: 9990;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 44px;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    background-color:transparent;\r\n  }\r\n  .header .header-box{\r\n      display: flex;\r\n      justify-content: space-between;\r\n  }\r\n  .header .headImg{\r\n    /* width:53px; */\r\n    padding:0 20px;\r\n    height:43px;\r\n    display: block;\r\n    background-size: 18px auto;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n  }\r\n  .header .moving{\r\n    background-image: url(\"http://127.0.0.1:7000/img/hall_new_trends_white.png\");\r\n  }\r\n  .header .search{\r\n    background-image: url(\"http://127.0.0.1:7000/img/hall_search_white.png\");\r\n  }\r\n  \r\n  /*菜单*/\r\n  .tabs-warp{\r\n    height: 42px;/*高度比tabs-content小, 目的是隐藏tabs的水平滚动条*/\r\n    overflow-y: hidden;\r\n    /* border-bottom: 1px solid #eee; */\r\n    box-sizing: content-box;\r\n    color:#fff;\r\n  }\r\n  .tabs-warp .tabs-content{\r\n    width: 100%;\r\n    height: 50px;\r\n    overflow-x: auto;\r\n  }\r\n  .tabs-warp .tabs-content .tabs{\r\n    width: 100%;\r\n    white-space: nowrap;\r\n  }\r\n  .tabs-warp .tabs-content .tabs li{\r\n    display: inline-block;\r\n    height: 40px;\r\n    line-height: 45px;\r\n    vertical-align: middle;\r\n  }\r\n  .tabs-warp .tabs-content .tabs .active{\r\n    color: #FF6990;\r\n  }\r\n/* 菜单样式改变 */\r\n  .whiteBg{\r\n    background: #fff;\r\n  }\r\n  .header .fontColor{\r\n    color:rgb(128, 128, 128);\r\n  }\r\n  .header .grayMoving{\r\n    background-image: url(\"http://127.0.0.1:7000/img/hall_new_trends_black.png\");\r\n  }\r\n  .header .graySearch{\r\n    background-image: url(\"http://127.0.0.1:7000/img/hall_search_black.png\");\r\n  }\r\n  /*菜单进度*/\r\n  .tabs-warp .tab-bar{\r\n    position: relative;\r\n    height: 2px;\r\n    background-color: #FF6990;\r\n    transition: left 300ms;\r\n  }\r\n  /*列表*/\r\n  .swiper-container{\r\n    position: fixed;\r\n    top: 0px;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n  }\r\n\r\n  /*展示上拉加载的数据列表*/\r\n  .data-li{\r\n    position: relative;\r\n    height: 80px;\r\n    padding: 10px 8px 10px 120px;\r\n    border-bottom: 1px solid #eee;\r\n  }\r\n  .data-li .pd-img{\r\n    position: absolute;\r\n    left: 18px;\r\n    top: 10px;\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n  .data-li .pd-name{\r\n    font-size: 13px;\r\n    line-height: 20px;\r\n    height: 40px;\r\n    margin-bottom: 10px;\r\n    overflow: hidden;\r\n  }\r\n  .data-li .pd-price{\r\n    font-size: 13px;\r\n    color: red;\r\n  }\r\n  .data-li .pd-sold{\r\n    font-size: 12px;\r\n    margin-top: 8px;\r\n    color: gray;\r\n  }\r\n  /* 因为使用了底部导航栏，要看到“没有更多...”加以下样式 */\r\n  .mescroll{\r\n    padding-bottom: 50px;\r\n  }\r\n    /* 大厅 */\r\n    /* 轮播图 */\r\n  .hall .banner{\r\n    width:100%;\r\n    height:150px;\r\n    }\r\n    .hall .banner img{\r\n        width:100%;\r\n        height:100%;\r\n    }\r\n\r\n.recommend{\r\n    position: relative;\r\n}\r\n.recommend .imgBox{\r\n  display:block;\r\n}\r\n.recommend .imgBox:not(:first-child){\r\n     width:40%;\r\n    padding-top: 30%;\r\n    float: right;\r\n    padding-left: 3px;\r\n    padding-right: 6px;\r\n}\r\n.recommend .imgBox:first-child{\r\n    /* background: red; */\r\n    width: 60%;\r\n    padding-top: 60%;\r\n    float: left;\r\n    padding-left:6px;\r\n    padding-right: 3px;\r\n}\r\n.imgBox{\r\n    box-sizing: border-box;\r\n    overflow: hidden;\r\n    position: relative;\r\n}\r\n.cf::after{\r\n    content: \"\";\r\n    display: block;\r\n    clear: both;\r\n}\r\n.bgPic{\r\n    position: absolute;\r\n    left:6px;\r\n    right:3px;\r\n    top:6px;\r\n    z-index: -1;\r\n}\r\n.bgPic img{\r\n    width:100%;\r\n    height: auto;\r\n}\r\n.recommend .imgBox:not(:first-child) .bgPic{\r\n    left: 3px;\r\n    right:6px;\r\n}\r\n.infoBox{\r\n    position:absolute;\r\n    top:67%;\r\n    left: 0;\r\n    right:0;\r\n}\r\n.recommend .imgBox:not(:first-child) .bgPic .infoBox{\r\n    top:46%;\r\n}\r\n.recommend .imgBox:not(:first-child)  .bgPic .infoBox .watching{\r\n    margin-right: 8px;\r\n}\r\n.infoBox img{\r\n    width:12px;\r\n    height: 12px;\r\n}\r\n.infoBox .info{\r\n    display: flex;\r\n    color:#fff;\r\n    font-size: 12px;\r\n}\r\n.infoBox .sign{\r\n    width:65%;\r\n    white-space: nowrap;\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n}\r\n.infoBox .watching{\r\n    width:25%;   \r\n    display: flex;\r\n    align-items: center; \r\n}\r\n.infoBox .ranking{\r\n    width: 20%;\r\n    margin:0 5px;\r\n    display: flex;\r\n} \r\n.hall .floor .sweetTittle{\r\n    padding:15px 0 10px 5px;\r\n}\r\n.hall .floor .sweetTittle img{\r\n    width:auto;\r\n    height:14px;\r\n    margin-right:8px;\r\n    position: relative;\r\n    top:1px;\r\n}\r\n\r\n.sweet{\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n}\r\n.sweet .imgBox{\r\n    width:50%;\r\n    padding-top:50%;\r\n    overflow: hidden;\r\n}\r\n.sweet .imgBox:nth-of-type(2n) .bgPic{\r\n  right: 6px;\r\n  left:3px;\r\n}\r\n.sweet .infoBox{\r\n  top:66%;\r\n}\r\n/* 除了第一个tab内容的mescroll位置 */\r\n.swiper-slide:not(:first-child) .mescroll{\r\n  padding-top:42px;\r\n}\r\n\r\n</style>\r\n"],"sourceRoot":"src/components"}]}