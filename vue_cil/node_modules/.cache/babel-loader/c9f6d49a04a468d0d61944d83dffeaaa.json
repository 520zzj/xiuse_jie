{"remainingRequest":"C:\\xampp\\htdocs\\xiuse_jie\\vue_cil\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\xiuse_jie\\vue_cil\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\xiuse_jie\\vue_cil\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\xiuse_jie\\vue_cil\\src\\components\\guard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\xiuse_jie\\vue_cil\\src\\components\\guard.vue","mtime":1566497609585},{"path":"C:\\xampp\\htdocs\\xiuse_jie\\vue_cil\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564486950657},{"path":"C:\\xampp\\htdocs\\xiuse_jie\\vue_cil\\node_modules\\babel-loader\\lib\\index.js","mtime":1564486949725},{"path":"C:\\xampp\\htdocs\\xiuse_jie\\vue_cil\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1564486950657},{"path":"C:\\xampp\\htdocs\\xiuse_jie\\vue_cil\\node_modules\\vue-loader\\lib\\index.js","mtime":1564486976739}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 轮播组件: https://github.com/surmon-china/vue-awesome-swiper\nimport 'swiper/dist/css/swiper.css';\nimport { swiper, swiperSlide } from 'vue-awesome-swiper'; // 引入mescroll的vue组件\n\nimport MescrollVue from 'mescroll.js/mescroll.vue'; //引入头部组件\n\nimport guardHead from \"./guardHead\";\nexport default {\n  name: 'guard',\n  data: function data() {\n    var _this = this;\n\n    return {\n      tabs: [{\n        name: '护卫日榜',\n        mescroll: null,\n        list: [],\n        isListInit: false\n      }, {\n        name: '护卫总榜',\n        mescroll: null,\n        list: [],\n        isListInit: false\n      }, {\n        name: '本周女神',\n        mescroll: null,\n        list: [],\n        isListInit: false\n      }, {\n        name: '上周女神',\n        mescroll: null,\n        list: [],\n        isListInit: false\n      }],\n      tabWidth: this.$store.state.width_s / 4,\n      // 每个tab的宽度\n      barWidth: this.$store.state.width_s / 4,\n      // tab底部红色线的宽度\n      curIndex: 0,\n      // 当前tab的下标\n      tabScrollLeft: 0,\n      // 菜单滚动条的位置\n      swiperOption: {\n        // 轮播配置\n        on: {\n          //注册页面滑动触发的事件\n          transitionEnd: function transitionEnd() {\n            _this.changeTab(_this.swiper.activeIndex);\n\n            console.log(_this.tabs[0].list);\n          }\n        }\n      }\n    };\n  },\n  components: {\n    swiper: swiper,\n    // 轮播组件\n    swiperSlide: swiperSlide,\n    // 轮播组件\n    MescrollVue: MescrollVue,\n    // Mescroll组件\n    guardHead: guardHead\n  },\n  computed: {\n    swiper: function swiper() {\n      // 轮播对象\n      return this.$refs.mySwiper.swiper;\n    },\n    barLeft: function barLeft() {\n      // 红线的位置\n      return this.tabWidth * this.curIndex + (this.tabWidth - this.barWidth) / 2 + 'px';\n    }\n  },\n  methods: {\n    // 多mescroll的配置,需通过方法获取,保证每个配置是单例\n    getMescrollDown: function getMescrollDown(tabIndex) {\n      var isAuto = tabIndex === 0; // 第一个mescroll传入true,列表自动加载\n\n      return {\n        auto: isAuto,\n        callback: this.downCallback\n      };\n    },\n    // mescroll上拉加载的配置\n    getMescrollUp: function getMescrollUp(tabIndex) {\n      var emptyWarpId = 'dataList' + tabIndex;\n      return {\n        auto: false,\n        callback: this.upCallback,\n        // 上拉回调,此处可简写; 相当于 callback: function (page) { upCallback(page); }\n        noMoreSize: 4,\n        // 如果列表已无数据,可设置列表的总数量要大于半页才显示无更多数据;避免列表数据过少(比如只有一条数据),显示无更多数据会不好看; 默认5\n        empty: {\n          warpId: emptyWarpId,\n          // 父布局的id;\n          icon: 'http://www.mescroll.com/img/mescroll-empty.png',\n          // 图标,默认null\n          tip: '暂无相关数据~' // 提示\n          //   btntext: '去逛逛 >', // 按钮,默认\"\"\n          //   btnClick: function () { // 点击按钮的回调,默认null\n          //     alert('点击了按钮,具体逻辑自行实现')\n          //   }\n\n        },\n        toTop: {\n          // 配置回到顶部按钮\n          src: 'http://www.mescroll.com/img/mescroll-totop.png' // 图片路径,默认null (建议写成网络图,不必考虑相对路径)\n\n        },\n        htmlNodata: '<p class=\"upwarp-nodata\">没有更多...</p>'\n      };\n    },\n    // mescroll初始化的回调\n    mescrollInit: function mescrollInit(tabIndex, arg) {\n      this.tabs[tabIndex].mescroll = arg[0]; // 传入mescroll对象\n\n      this.tabs[tabIndex].mescroll.tabIndex = tabIndex; // 加入标记,便于在回调中取到对应的list\n    },\n    // 切换菜单\n    changeTab: function changeTab(tabIndex) {\n      if (this.curIndex === tabIndex) return; // 避免重复调用\n\n      var curTab = this.tabs[this.curIndex]; // 当前列表\n\n      var newTab = this.tabs[tabIndex]; // 新转换的列表\n\n      curTab.mescroll && curTab.mescroll.hideTopBtn(); // 隐藏当前列表的回到顶部按钮\n\n      this.curIndex = tabIndex; // 切换菜单\n\n      this.swiper.slideTo(tabIndex); // 菜单项居中动画\n      //   if (curTab.mescroll) {\n      //     let tabsContent = this.$refs.tabsContent;\n      //     let tabDom = tabsContent.getElementsByClassName('tab')[tabIndex];\n      //     let star = tabsContent.scrollLeft;// 当前位置\n      //     let end = tabDom.offsetLeft + tabDom.clientWidth / 2 - document.body.clientWidth / 2; // 居中\n      //     this.tabScrollLeft = end;\n      //     curTab.mescroll.getStep(star, end, function (step) {\n      //       tabsContent.scrollLeft = step; // 从当前位置逐渐移动到中间位置,默认时长300ms\n      //     });\n      //   }\n\n      if (newTab.mescroll) {\n        if (!newTab.isListInit) {\n          // 加载列表\n          newTab.mescroll.triggerDownScroll();\n          console.log(\"主动触发下拉刷新\");\n        } else {\n          // 检查新转换的列表是否需要显示回到到顶按钮\n          setTimeout(function () {\n            var curScrollTop = newTab.mescroll.getScrollTop();\n\n            if (curScrollTop >= newTab.mescroll.optUp.toTop.offset) {\n              newTab.mescroll.showTopBtn();\n            } else {\n              newTab.mescroll.hideTopBtn();\n            }\n          }, 30);\n        }\n      }\n    },\n\n    /* 下拉刷新的回调 */\n    downCallback: function downCallback(mescroll) {\n      // 这里加载你想下拉刷新的数据, 比如刷新tab1的轮播数据\n      if (mescroll.tabIndex === 0) {// loadSwiper();\n      } else if (mescroll.tabIndex === 1) {// ....\n      } else if (mescroll.tabIndex === 2) {// ....\n      }\n\n      mescroll.resetUpScroll(); // 触发下拉刷新的回调,加载第一页的数据\n    },\n\n    /* 上拉加载的回调 page = {num:1, size:10}; num:当前页 从1开始, size:每页数据条数 */\n    upCallback: function upCallback(page, mescroll) {\n      var _this2 = this;\n\n      console.log(\"触发了上拉回调\");\n\n      if (mescroll.tabIndex === 0) {\n        // 可以单独处理每个tab的请求\n        this.axios.get('http://127.0.0.1:7000/guard/guardDay', {\n          params: {\n            num: page.num,\n            // 页码\n            size: 15 // 每页长度\n\n          }\n        }).then(function (response) {\n          // 请求的列表数据\n          console.log(response);\n          var arr = response.data; // 标记列表已初始化,保证列表只初始化一次\n\n          _this2.tabs[mescroll.tabIndex].isListInit = true; // 如果是第一页需手动置空列表\n\n          if (page.num === 1) _this2.tabs[mescroll.tabIndex].list = []; // 把请求到的数据添加到列表\n\n          _this2.tabs[mescroll.tabIndex].list = _this2.tabs[mescroll.tabIndex].list.concat(arr); // 数据渲染成功后,隐藏下拉刷新的状态\n\n          _this2.$nextTick(function () {\n            mescroll.endSuccess(arr.length);\n          });\n        }).catch(function (e) {\n          // 联网失败的回调,隐藏下拉刷新和上拉加载的状态;\n          if (page.num === 1) _this2.tabs[mescroll.tabIndex].isListInit = false;\n          mescroll.endErr();\n        });\n      } else if (mescroll.tabIndex === 1) {\n        // 可以单独处理每个tab的请求\n        this.axios.get('http://127.0.0.1:7000/guard/guardDay', {\n          params: {\n            num: page.num,\n            // 页码\n            size: 15 // 每页长度\n\n          }\n        }).then(function (response) {\n          // 请求的列表数据\n          console.log(response);\n          var arr = response.data; // 标记列表已初始化,保证列表只初始化一次\n\n          _this2.tabs[mescroll.tabIndex].isListInit = true; // 如果是第一页需手动置空列表\n\n          if (page.num === 1) _this2.tabs[mescroll.tabIndex].list = []; // 把请求到的数据添加到列表\n\n          _this2.tabs[mescroll.tabIndex].list = _this2.tabs[mescroll.tabIndex].list.concat(arr); // 数据渲染成功后,隐藏下拉刷新的状态\n\n          _this2.$nextTick(function () {\n            mescroll.endSuccess(arr.length);\n          });\n        }).catch(function (e) {\n          // 联网失败的回调,隐藏下拉刷新和上拉加载的状态;\n          if (page.num === 1) _this2.tabs[mescroll.tabIndex].isListInit = false;\n          mescroll.endErr();\n        });\n      } else if (mescroll.tabIndex) {\n        this.axios.get('http://127.0.0.1:7000/guard/goddess', {\n          params: {\n            num: page.num,\n            // 页码\n            size: 15 // 每页长度\n\n          }\n        }).then(function (response) {\n          // 请求的列表数据\n          console.log(response);\n          var arr = response.data; // 标记列表已初始化,保证列表只初始化一次\n\n          _this2.tabs[mescroll.tabIndex].isListInit = true; // 如果是第一页需手动置空列表\n\n          if (page.num === 1) _this2.tabs[mescroll.tabIndex].list = []; // 把请求到的数据添加到列表\n\n          _this2.tabs[mescroll.tabIndex].list = _this2.tabs[mescroll.tabIndex].list.concat(arr); // 数据渲染成功后,隐藏下拉刷新的状态\n\n          _this2.$nextTick(function () {\n            mescroll.endSuccess(arr.length);\n          });\n        }).catch(function (e) {\n          // 联网失败的回调,隐藏下拉刷新和上拉加载的状态;\n          if (page.num === 1) _this2.tabs[mescroll.tabIndex].isListInit = false;\n          mescroll.endErr();\n        });\n      } else if (mescroll.tabIndex) {\n        this.axios.get('http://127.0.0.1:7000/guard/goddess', {\n          params: {\n            num: page.num,\n            // 页码\n            size: 15 // 每页长度\n\n          }\n        }).then(function (response) {\n          // 请求的列表数据\n          console.log(response);\n          var arr = response.data; // 标记列表已初始化,保证列表只初始化一次\n\n          _this2.tabs[mescroll.tabIndex].isListInit = true; // 如果是第一页需手动置空列表\n\n          if (page.num === 1) _this2.tabs[mescroll.tabIndex].list = []; // 把请求到的数据添加到列表\n\n          _this2.tabs[mescroll.tabIndex].list = _this2.tabs[mescroll.tabIndex].list.concat(arr); // 数据渲染成功后,隐藏下拉刷新的状态\n\n          _this2.$nextTick(function () {\n            mescroll.endSuccess(arr.length);\n          });\n        }).catch(function (e) {\n          // 联网失败的回调,隐藏下拉刷新和上拉加载的状态;\n          if (page.num === 1) _this2.tabs[mescroll.tabIndex].isListInit = false;\n          mescroll.endErr();\n        });\n      } //   console.log(\"触发了上拉回调\")\n      //   this.tabs[mescroll.tabIndex].isListInit = true;// 标记列表已初始化,保证列表只初始化一次\n      //   this.getListDataFromNet(mescroll.tabIndex, page.num, page.size, (curPageData) => {\n      //     mescroll.endSuccess(curPageData.length);// 联网成功的回调,隐藏下拉刷新和上拉加载的状态;\n      //     if (page.num === 1) this.tabs[mescroll.tabIndex].list = []; // 如果是第一页需手动制空列表\n      //     this.tabs[mescroll.tabIndex].list = this.tabs[mescroll.tabIndex].list.concat(curPageData); // 追加新数据\n      //   }, () => {\n      //     if (page.num === 1) this.tabs[mescroll.tabIndex].isListInit = false;\n      //     mescroll.endErr();// 联网失败的回调,隐藏下拉刷新的状态\n      //   })\n\n    }\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    // 如果没有配置回到顶部按钮或isBounce,则beforeRouteEnter不用写\n    next(function (vm) {\n      var curMescroll = vm.$refs['mescroll' + vm.curIndex]; // 找到当前mescroll的ref,调用子组件mescroll-vue的beforeRouteEnter方法\n\n      curMescroll && curMescroll.beforeRouteEnter(); // 进入路由时,滚动到原来的列表位置,恢复回到顶部按钮和isBounce的配置\n      // 恢复水平菜单的滚动条位置\n\n      console.log(\"beforeRouterEnter\");\n      if (vm.$refs.tabsContent) vm.$refs.tabsContent.scrollLeft = vm.tabScrollLeft;\n    });\n  },\n  beforeRouteLeave: function beforeRouteLeave(to, from, next) {\n    // 如果没有配置回到顶部按钮或isBounce,则beforeRouteLeave不用写\n    var curMescroll = this.$refs['mescroll' + this.curIndex]; // 找到当前mescroll的ref,调用子组件mescroll-vue的beforeRouteEnter方法\n\n    curMescroll && curMescroll.beforeRouteLeave(); // 退出路由时,记录列表滚动的位置,隐藏回到顶部按钮和isBounce的配置\n\n    console.log(\"beforeRouterLeave\");\n    next();\n  }\n};",{"version":3,"sources":["guard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <!--标题-->\r\n    <div class=\"header\">\r\n      <guard-head></guard-head>\r\n      <!--菜单. 如果up配置了isBounce为false,则需加上mescroll-touch-x,原因: http://www.mescroll.com/qa.html#q10 -->\r\n      <div class=\"tabs-warp\">\r\n        <div ref=\"tabsContent\" class=\"tabs-content mescroll-touch-x\">\r\n          <div style=\"display: inline-block\"> <!--PC端运行,加上这个div可修复tab-bar错位的问题 -->\r\n            <ul class=\"tabs\" ref=\"tabs\">\r\n              <li class=\"tab\" v-for=\"(tab,i) in tabs\" :class=\"{active: i===curIndex}\" :style=\"{width: tabWidth+'px'}\" :key=\"i\" @click=\"changeTab(i)\">{{tab.name}}</li>\r\n            </ul>\r\n            <div class=\"tab-bar\" :style=\"{width: barWidth+'px', left: barLeft}\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!--轮播-->\r\n    <swiper ref=\"mySwiper\" :options=\"swiperOption\">  \r\n      <!--护卫日榜-->\r\n      <swiper-slide>\r\n        <mescroll-vue ref=\"mescroll0\" :down=\"getMescrollDown(0)\" :up=\"getMescrollUp(0)\" @init=\"mescrollInit(0,arguments)\">\r\n          <div id=\"dataList0\" class=\"section\">\r\n                        <div class=\"befThree\">\r\n                            <ul class=\"threeBox\">\r\n                                <li v-for=\"(item,index) in tabs[curIndex].list.slice(0,3)\" :key=\"index\">\r\n                                        <a href=\"\" class=\"link\">\r\n                                            <div class=\"Medal\">\r\n                                                <div class=\"circle\"><img :src=\"item.avatar\" alt=\"\"></div>\r\n                                            </div>\r\n                                            <div class=\"details\">\r\n                                                <p class=\"style\">{{item.guardName}}</p>\r\n                                                <div class=\"rankBgBox\">\r\n                                                    <img :src=\"item.nameBg\" alt=\"\" class=\"rankBg\">\r\n                                                        <span class=\"rankText\">{{item.guardName}}</span>\r\n                                                    <div class=\"num\">\r\n                                                        <img :src=\"item.rankingOne\" alt=\"\">\r\n                                                        <img :src=\"item.rankingTwo\" alt=\"\">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"fight\">战力值：<span>{{item.fight}}</span></div>\r\n                                            </div>\r\n                                        </a>\r\n                                    </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"aftThree\">\r\n                            <ul class=\"mui-table-view\">\r\n                                    <li class=\"mui-table-view-cell\"  v-for=\"(item,index) in tabs[curIndex].list.slice(3)\" :key=\"index\">\r\n                                        <a class=\"mui-navigate-right\">\r\n                                        <div class=\"listItem\">\r\n                                                    <span class=\"ranking\">{{index+4}}</span>\r\n                                                <div class=\"picFraBox\">\r\n                                                     <div class=\"picFra\"><img :src=\"item.avatar\" alt=\"\"></div>\r\n                                                </div>\r\n                                                <div class=\"guardRanking\">\r\n                                                     <span class=\"name\">{{item.guardName}}</span>\r\n                                                    <div class=\"rankBgBox\">\r\n                                                        <img :src=\"item.nameBg\" alt=\"\" class=\"rankBg\">\r\n                                                            <span class=\"rankText\">{{item.guardName}}</span>\r\n                                                        <div class=\"num\">\r\n                                                            <img :src=\"item.rankingOne\" alt=\"\">\r\n                                                            <img :src=\"item.rankingTwo\" alt=\"\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"fight\">战力值：<span>{{item.fight}}</span></div>\r\n                                        </div>\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                        </div>\r\n          </div>\r\n        </mescroll-vue>\r\n      </swiper-slide> \r\n      <!-- 护卫总榜 可不配down-->\r\n      <swiper-slide>\r\n        <mescroll-vue ref=\"mescroll1\" :up=\"getMescrollUp(1)\" @init=\"mescrollInit(1,arguments)\">\r\n            <div id=\"dataList1\" class=\"section\">\r\n             <div class=\"befThree\">\r\n                            <ul class=\"threeBox\">\r\n                                <li v-for=\"(item,index) in tabs[curIndex].list.slice(0,3)\" :key=\"index\">\r\n                                        <a href=\"\" class=\"link\">\r\n                                            <div class=\"Medal\">\r\n                                                <div class=\"circle\"><img :src=\"item.avatar\" alt=\"\"></div>\r\n                                            </div>\r\n                                            <div class=\"details\">\r\n                                                <p class=\"style\">{{item.guardName}}</p>\r\n                                                <div class=\"rankBgBox\">\r\n                                                    <img :src=\"item.nameBg\" alt=\"\" class=\"rankBg\">\r\n                                                        <span class=\"rankText\">{{item.guardName}}</span>\r\n                                                    <div class=\"num\">\r\n                                                        <img :src=\"item.rankingOne\" alt=\"\">\r\n                                                        <img :src=\"item.rankingTwo\" alt=\"\">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"fight\">战力值：<span>{{item.fight}}</span></div>\r\n                                            </div>\r\n                                        </a>\r\n                                    </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div class=\"aftThree\">\r\n                            <ul class=\"mui-table-view\">\r\n                                    <li class=\"mui-table-view-cell\"  v-for=\"(item,index) in tabs[curIndex].list.slice(3)\" :key=\"index\">\r\n                                        <a class=\"mui-navigate-right\">\r\n                                        <div class=\"listItem\">\r\n                                                    <span class=\"ranking\">{{index+4}}</span>\r\n                                                 <div class=\"picFraBox\">\r\n                                                     <div class=\"picFra\"><img :src=\"item.avatar\" alt=\"\"></div>\r\n                                                </div>\r\n                                                 <div class=\"guardRanking\">\r\n                                                     <span class=\"name\">{{item.guardName}}</span>\r\n                                                    <div class=\"rankBgBox\">\r\n                                                        <img :src=\"item.nameBg\" alt=\"\" class=\"rankBg\">\r\n                                                            <span class=\"rankText\">{{item.guardName}}</span>\r\n                                                        <div class=\"num\">\r\n                                                            <img :src=\"item.rankingOne\" alt=\"\">\r\n                                                            <img :src=\"item.rankingTwo\" alt=\"\">\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"fight\">战力值：<span>{{item.fight}}</span></div>\r\n                                        </div>\r\n                                        </a>\r\n                                    </li>\r\n                                </ul>\r\n                        </div>\r\n          </div>\r\n        </mescroll-vue>\r\n      </swiper-slide>\r\n      <!-- 本周女神-->\r\n      <swiper-slide>\r\n        <mescroll-vue ref=\"mescroll2\" :up=\"getMescrollUp(2)\" @init=\"mescrollInit(2,arguments)\">\r\n             <div id=\"dataList2\" class=\"section\">\r\n                <div class=\"befThree\">\r\n                    <ul class=\"threeBox\">\r\n                        <li v-for=\"(item,index) in tabs[curIndex].list.slice(0,3)\" :key=\"index\">\r\n                                <a href=\"\" class=\"link\">\r\n                                    <div class=\"Medal\">\r\n                                        <div class=\"circle\"><img :src=\"item.avatar\" alt=\"\"></div>\r\n                                    </div>\r\n                                    <div class=\"details\">\r\n                                        <p class=\"style\">{{item.sign}}</p>\r\n                                        <div class=\"rankBgBox\">\r\n                                            <img :src=\"item.nameBg\" alt=\"\" class=\"rankBg\">\r\n                                                <span class=\"rankText\">{{item.guardName}}</span>\r\n                                            <div class=\"num\">\r\n                                                <img :src=\"item.rankingOne\" alt=\"\">\r\n                                                <img :src=\"item.rankingTwo\" alt=\"\">\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"fight\">贡献：<span>{{item.contribute}}</span></div>\r\n                                    </div>\r\n                                </a>\r\n                            </li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"aftThree\">\r\n                    <ul class=\"mui-table-view\">\r\n                            <li class=\"mui-table-view-cell\"  v-for=\"(item,index) in tabs[curIndex].list.slice(3)\" :key=\"index\">\r\n                                <a class=\"mui-navigate-right\">\r\n                                <div class=\"listItem\">\r\n                                            <span class=\"ranking\">{{index+4}}</span>\r\n                                        <div class=\"picFraBox\">\r\n                                                     <div class=\"picFra\"><img :src=\"item.avatar\" alt=\"\"></div>\r\n                                                </div>\r\n                                        <div class=\"goddess\">\r\n                                                <span class=\"name\">{{item.sign}}</span>\r\n                                            <div class=\"rankBgBox\">\r\n                                                <img :src=\"item.nameBg\" alt=\"\" class=\"rankBg\">\r\n                                                    <span class=\"rankText\">{{item.guardName}}</span>\r\n                                                <div class=\"num\">\r\n                                                    <img :src=\"item.rankingOne\" alt=\"\">\r\n                                                    <img :src=\"item.rankingTwo\" alt=\"\">\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"fight\">贡献：<span>{{item.contribute}}</span></div>\r\n                                </div>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                </div>\r\n          </div>\r\n        </mescroll-vue>\r\n      </swiper-slide>\r\n      <!-- 上周女神-->\r\n      <swiper-slide>\r\n        <mescroll-vue ref=\"mescroll3\" :up=\"getMescrollUp(3)\" @init=\"mescrollInit(3,arguments)\">\r\n            <div id=\"dataList3\" class=\"section\">\r\n                 <div class=\"befThree\">\r\n                    <ul class=\"threeBox\">\r\n                        <li v-for=\"(item,index) in tabs[curIndex].list.slice(0,3)\" :key=\"index\">\r\n                                <a href=\"\" class=\"link\">\r\n                                    <div class=\"Medal\">\r\n                                        <div class=\"circle\"><img :src=\"item.avatar\" alt=\"\"></div>\r\n                                    </div>\r\n                                    <div class=\"details\">\r\n                                        <p class=\"style\">{{item.sign}}</p>\r\n                                        <div class=\"rankBgBox\">\r\n                                            <img :src=\"item.nameBg\" alt=\"\" class=\"rankBg\">\r\n                                                <span class=\"rankText\">{{item.guardName}}</span>\r\n                                            <div class=\"num\">\r\n                                                <img :src=\"item.rankingOne\" alt=\"\">\r\n                                                <img :src=\"item.rankingTwo\" alt=\"\">\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"fight\">贡献：<span>{{item.contribute}}</span></div>\r\n                                    </div>\r\n                                </a>\r\n                            </li>\r\n                    </ul>\r\n                </div>\r\n                <div class=\"aftThree\">\r\n                    <ul class=\"mui-table-view\">\r\n                            <li class=\"mui-table-view-cell\"  v-for=\"(item,index) in tabs[curIndex].list.slice(3)\" :key=\"index\">\r\n                                <a class=\"mui-navigate-right\">\r\n                                <div class=\"listItem\">\r\n                                            <span class=\"ranking\">{{index+4}}</span>\r\n                                        <div class=\"picFraBox\">\r\n                                                     <div class=\"picFra\"><img :src=\"item.avatar\" alt=\"\"></div>\r\n                                                </div>\r\n                                        <div class=\"goddess\">\r\n                                                <span class=\"name\">{{item.sign}}</span>\r\n                                            <div class=\"rankBgBox\">\r\n                                                <img :src=\"item.nameBg\" alt=\"\" class=\"rankBg\">\r\n                                                    <span class=\"rankText\">{{item.guardName}}</span>\r\n                                                <div class=\"num\">\r\n                                                    <img :src=\"item.rankingOne\" alt=\"\">\r\n                                                    <img :src=\"item.rankingTwo\" alt=\"\">\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"fight\">贡献：<span>{{item.contribute}}</span></div>\r\n                                </div>\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n                </div>\r\n          </div>\r\n        </mescroll-vue>\r\n      </swiper-slide>\r\n    </swiper>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 轮播组件: https://github.com/surmon-china/vue-awesome-swiper\r\nimport 'swiper/dist/css/swiper.css'\r\nimport { swiper, swiperSlide } from 'vue-awesome-swiper'\r\n// 引入mescroll的vue组件\r\nimport MescrollVue from 'mescroll.js/mescroll.vue'\r\n//引入头部组件\r\nimport guardHead from \"./guardHead\"\r\nexport default {\r\n  name: 'guard',\r\n  data () {\r\n    return {\r\n      tabs: [{name: '护卫日榜', mescroll: null, list: [], isListInit: false}, {name: '护卫总榜', mescroll: null, list: [], isListInit: false}, {name: '本周女神', mescroll: null, list: [], isListInit: false}, {name: '上周女神', mescroll: null, list: [], isListInit: false}],\r\n      tabWidth: this.$store.state.width_s/4, // 每个tab的宽度\r\n      barWidth: this.$store.state.width_s/4, // tab底部红色线的宽度\r\n      curIndex: 0, // 当前tab的下标\r\n      tabScrollLeft: 0, // 菜单滚动条的位置\r\n      swiperOption: { // 轮播配置\r\n        on: {\r\n          //注册页面滑动触发的事件\r\n          transitionEnd: () => {\r\n            this.changeTab(this.swiper.activeIndex)\r\n            console.log(this.tabs[0].list)\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  components: {\r\n    swiper, // 轮播组件\r\n    swiperSlide, // 轮播组件\r\n   MescrollVue, // Mescroll组件\r\n    guardHead\r\n  },\r\n  computed: {\r\n    swiper () { // 轮播对象\r\n      return this.$refs.mySwiper.swiper\r\n    },\r\n    barLeft () { // 红线的位置\r\n      return (this.tabWidth * this.curIndex + (this.tabWidth - this.barWidth) / 2) + 'px'\r\n    }\r\n  },\r\n  methods: {\r\n    // 多mescroll的配置,需通过方法获取,保证每个配置是单例\r\n    getMescrollDown (tabIndex) {\r\n      let isAuto = tabIndex === 0; // 第一个mescroll传入true,列表自动加载\r\n      return {\r\n        auto: isAuto,\r\n        callback: this.downCallback\r\n      }\r\n    },\r\n    // mescroll上拉加载的配置\r\n    getMescrollUp (tabIndex) {\r\n      let emptyWarpId = 'dataList' + tabIndex;\r\n      return {\r\n        auto: false,\r\n        callback: this.upCallback, // 上拉回调,此处可简写; 相当于 callback: function (page) { upCallback(page); }\r\n        noMoreSize: 4, // 如果列表已无数据,可设置列表的总数量要大于半页才显示无更多数据;避免列表数据过少(比如只有一条数据),显示无更多数据会不好看; 默认5\r\n        empty: {\r\n          warpId: emptyWarpId, // 父布局的id;\r\n          icon: 'http://www.mescroll.com/img/mescroll-empty.png', // 图标,默认null\r\n          tip: '暂无相关数据~', // 提示\r\n        //   btntext: '去逛逛 >', // 按钮,默认\"\"\r\n        //   btnClick: function () { // 点击按钮的回调,默认null\r\n        //     alert('点击了按钮,具体逻辑自行实现')\r\n        //   }\r\n        }, \r\n        toTop: { // 配置回到顶部按钮\r\n          src: 'http://www.mescroll.com/img/mescroll-totop.png' // 图片路径,默认null (建议写成网络图,不必考虑相对路径)\r\n        },\r\n        htmlNodata:'<p class=\"upwarp-nodata\">没有更多...</p>',\r\n      }\r\n    },\r\n    // mescroll初始化的回调\r\n    mescrollInit (tabIndex, arg) {\r\n      this.tabs[tabIndex].mescroll = arg[0]; // 传入mescroll对象\r\n      this.tabs[tabIndex].mescroll.tabIndex = tabIndex; // 加入标记,便于在回调中取到对应的list\r\n    },\r\n    // 切换菜单\r\n    changeTab (tabIndex) {  \r\n      if (this.curIndex === tabIndex) return; // 避免重复调用\r\n      let curTab = this.tabs[this.curIndex];// 当前列表\r\n      let newTab = this.tabs[tabIndex];// 新转换的列表\r\n      curTab.mescroll && curTab.mescroll.hideTopBtn(); // 隐藏当前列表的回到顶部按钮\r\n      this.curIndex = tabIndex; // 切换菜单\r\n      this.swiper.slideTo(tabIndex);\r\n      // 菜单项居中动画\r\n    //   if (curTab.mescroll) {\r\n    //     let tabsContent = this.$refs.tabsContent;\r\n    //     let tabDom = tabsContent.getElementsByClassName('tab')[tabIndex];\r\n    //     let star = tabsContent.scrollLeft;// 当前位置\r\n    //     let end = tabDom.offsetLeft + tabDom.clientWidth / 2 - document.body.clientWidth / 2; // 居中\r\n    //     this.tabScrollLeft = end;\r\n    //     curTab.mescroll.getStep(star, end, function (step) {\r\n    //       tabsContent.scrollLeft = step; // 从当前位置逐渐移动到中间位置,默认时长300ms\r\n    //     });\r\n    //   }\r\n      if (newTab.mescroll) {\r\n        if (!newTab.isListInit) {\r\n          // 加载列表\r\n          newTab.mescroll.triggerDownScroll();\r\n          console.log(\"主动触发下拉刷新\")\r\n        } else {\r\n          // 检查新转换的列表是否需要显示回到到顶按钮\r\n          setTimeout(() => {\r\n            let curScrollTop = newTab.mescroll.getScrollTop();\r\n            if (curScrollTop >= newTab.mescroll.optUp.toTop.offset) {\r\n              newTab.mescroll.showTopBtn();\r\n            } else {\r\n              newTab.mescroll.hideTopBtn();\r\n            }\r\n          }, 30)\r\n        }\r\n      }\r\n    },\r\n    /* 下拉刷新的回调 */\r\n    downCallback (mescroll) {\r\n      // 这里加载你想下拉刷新的数据, 比如刷新tab1的轮播数据\r\n      if (mescroll.tabIndex === 0) {\r\n        // loadSwiper();\r\n      } else if (mescroll.tabIndex === 1) {\r\n        // ....\r\n      } else if (mescroll.tabIndex === 2) {\r\n        // ....\r\n      }\r\n      mescroll.resetUpScroll();// 触发下拉刷新的回调,加载第一页的数据\r\n    },\r\n    /* 上拉加载的回调 page = {num:1, size:10}; num:当前页 从1开始, size:每页数据条数 */\r\n    upCallback (page, mescroll) {\r\n        console.log(\"触发了上拉回调\")\r\n      if (mescroll.tabIndex === 0) {\r\n        // 可以单独处理每个tab的请求\r\n         this.axios.get('http://127.0.0.1:7000/guard/guardDay', {\r\n\t\t\t        params: {\r\n\t\t\t          num: page.num, // 页码\r\n\t\t\t          size: 15 // 每页长度\r\n\t\t\t        }\r\n\t\t\t      }).then((response) => {\r\n                    // 请求的列表数据\r\n                    console.log(response)\r\n                    let arr = response.data\r\n                    // 标记列表已初始化,保证列表只初始化一次\r\n                    this.tabs[mescroll.tabIndex].isListInit = true;\r\n\t\t\t        // 如果是第一页需手动置空列表\r\n\t\t\t        if (page.num === 1) this.tabs[mescroll.tabIndex].list= []\r\n\t\t\t        // 把请求到的数据添加到列表\r\n                   this.tabs[mescroll.tabIndex].list = this.tabs[mescroll.tabIndex].list.concat(arr)\r\n\t\t\t        // 数据渲染成功后,隐藏下拉刷新的状态\r\n\t\t\t        this.$nextTick(() => {\r\n\t\t\t          mescroll.endSuccess(arr.length)\r\n\t\t\t        })\r\n\t\t\t      }).catch((e) => {\r\n                    // 联网失败的回调,隐藏下拉刷新和上拉加载的状态;\r\n                     if (page.num === 1) this.tabs[mescroll.tabIndex].isListInit = false;\r\n\t\t\t        mescroll.endErr()\r\n\t\t\t      })\r\n     \r\n      }else if (mescroll.tabIndex === 1) {\r\n        // 可以单独处理每个tab的请求\r\n         this.axios.get('http://127.0.0.1:7000/guard/guardDay', {\r\n\t\t\t        params: {\r\n\t\t\t          num: page.num, // 页码\r\n\t\t\t          size: 15 // 每页长度\r\n\t\t\t        }\r\n\t\t\t      }).then((response) => {\r\n                    // 请求的列表数据\r\n                    console.log(response)\r\n                    let arr = response.data\r\n                    // 标记列表已初始化,保证列表只初始化一次\r\n                    this.tabs[mescroll.tabIndex].isListInit = true;\r\n\t\t\t        // 如果是第一页需手动置空列表\r\n\t\t\t        if (page.num === 1) this.tabs[mescroll.tabIndex].list= []\r\n\t\t\t        // 把请求到的数据添加到列表\r\n                   this.tabs[mescroll.tabIndex].list = this.tabs[mescroll.tabIndex].list.concat(arr)\r\n\t\t\t        // 数据渲染成功后,隐藏下拉刷新的状态\r\n\t\t\t        this.$nextTick(() => {\r\n\t\t\t          mescroll.endSuccess(arr.length)\r\n\t\t\t        })\r\n\t\t\t      }).catch((e) => {\r\n                    // 联网失败的回调,隐藏下拉刷新和上拉加载的状态;\r\n                     if (page.num === 1) this.tabs[mescroll.tabIndex].isListInit = false;\r\n\t\t\t        mescroll.endErr()\r\n\t\t\t      })\r\n      }else if(mescroll.tabIndex){\r\n           this.axios.get('http://127.0.0.1:7000/guard/goddess', {\r\n\t\t\t        params: {\r\n\t\t\t          num: page.num, // 页码\r\n\t\t\t          size: 15 // 每页长度\r\n\t\t\t        }\r\n\t\t\t      }).then((response) => {\r\n                    // 请求的列表数据\r\n                    console.log(response)\r\n                    let arr = response.data\r\n                    // 标记列表已初始化,保证列表只初始化一次\r\n                    this.tabs[mescroll.tabIndex].isListInit = true;\r\n\t\t\t        // 如果是第一页需手动置空列表\r\n\t\t\t        if (page.num === 1) this.tabs[mescroll.tabIndex].list= []\r\n\t\t\t        // 把请求到的数据添加到列表\r\n                   this.tabs[mescroll.tabIndex].list = this.tabs[mescroll.tabIndex].list.concat(arr)\r\n\t\t\t        // 数据渲染成功后,隐藏下拉刷新的状态\r\n\t\t\t        this.$nextTick(() => {\r\n\t\t\t          mescroll.endSuccess(arr.length)\r\n\t\t\t        })\r\n\t\t\t      }).catch((e) => {\r\n                    // 联网失败的回调,隐藏下拉刷新和上拉加载的状态;\r\n                     if (page.num === 1) this.tabs[mescroll.tabIndex].isListInit = false;\r\n\t\t\t        mescroll.endErr()\r\n\t\t\t      })\r\n      }else if(mescroll.tabIndex){\r\n           this.axios.get('http://127.0.0.1:7000/guard/goddess', {\r\n\t\t\t        params: {\r\n\t\t\t          num: page.num, // 页码\r\n\t\t\t          size: 15 // 每页长度\r\n\t\t\t        }\r\n\t\t\t      }).then((response) => {\r\n                    // 请求的列表数据\r\n                    console.log(response)\r\n                    let arr = response.data\r\n                    // 标记列表已初始化,保证列表只初始化一次\r\n                    this.tabs[mescroll.tabIndex].isListInit = true;\r\n\t\t\t        // 如果是第一页需手动置空列表\r\n\t\t\t        if (page.num === 1) this.tabs[mescroll.tabIndex].list= []\r\n\t\t\t        // 把请求到的数据添加到列表\r\n                   this.tabs[mescroll.tabIndex].list = this.tabs[mescroll.tabIndex].list.concat(arr)\r\n\t\t\t        // 数据渲染成功后,隐藏下拉刷新的状态\r\n\t\t\t        this.$nextTick(() => {\r\n\t\t\t          mescroll.endSuccess(arr.length)\r\n\t\t\t        })\r\n\t\t\t      }).catch((e) => {\r\n                    // 联网失败的回调,隐藏下拉刷新和上拉加载的状态;\r\n                     if (page.num === 1) this.tabs[mescroll.tabIndex].isListInit = false;\r\n\t\t\t        mescroll.endErr()\r\n\t\t\t      })\r\n      }\r\n    //   console.log(\"触发了上拉回调\")\r\n    //   this.tabs[mescroll.tabIndex].isListInit = true;// 标记列表已初始化,保证列表只初始化一次\r\n    //   this.getListDataFromNet(mescroll.tabIndex, page.num, page.size, (curPageData) => {\r\n    //     mescroll.endSuccess(curPageData.length);// 联网成功的回调,隐藏下拉刷新和上拉加载的状态;\r\n    //     if (page.num === 1) this.tabs[mescroll.tabIndex].list = []; // 如果是第一页需手动制空列表\r\n    //     this.tabs[mescroll.tabIndex].list = this.tabs[mescroll.tabIndex].list.concat(curPageData); // 追加新数据\r\n    //   }, () => {\r\n    //     if (page.num === 1) this.tabs[mescroll.tabIndex].isListInit = false;\r\n    //     mescroll.endErr();// 联网失败的回调,隐藏下拉刷新的状态\r\n    //   })\r\n    },\r\n    /* 联网加载列表数据\r\n          在您的实际项目中,请参考官方写法: http://www.mescroll.com/api.html#tagUpCallback\r\n          请忽略getListDataFromNet的逻辑,这里仅仅是在本地模拟分页数据,本地演示用\r\n          实际项目以您服务器接口返回的数据为准,无需本地处理分页.\r\n          * */\r\n    // getListDataFromNet (tabIndex, pageNum, pageSize, successCallback, errorCallback) {\r\n    //   // 延时一秒,模拟联网\r\n    //   setTimeout(() => {\r\n    //     try {\r\n    //       var listData = []\r\n    //       if (tabIndex === 0) {\r\n    //         // 全部商品 (模拟分页数据)\r\n    //         for (var i = (pageNum - 1) * pageSize; i < pageNum * pageSize; i++) {\r\n    //           if (i === mockData.length) break\r\n    //           listData.push(mockData[i])\r\n    //         }\r\n    //       } else {\r\n    //         // 模拟关键词搜索\r\n    //         var word = this.tabs[tabIndex].name;\r\n    //         for (var k = 0; k < mockData.length; k++) {\r\n    //           if (mockData[k].pdName.indexOf(word) !== -1) {\r\n    //             listData.push(mockData[k])\r\n    //           }\r\n    //         }\r\n    //       }\r\n    //       // 回调\r\n    //       successCallback && successCallback(listData);\r\n    //     } catch (e) {\r\n    //       // 联网失败的回调\r\n    //       errorCallback && errorCallback();\r\n    //     }\r\n    //   }, 1000)\r\n    // }\r\n  },\r\n  beforeRouteEnter (to, from, next) { // 如果没有配置回到顶部按钮或isBounce,则beforeRouteEnter不用写\r\n    next(vm => {\r\n      let curMescroll = vm.$refs['mescroll' + vm.curIndex]; // 找到当前mescroll的ref,调用子组件mescroll-vue的beforeRouteEnter方法\r\n      curMescroll && curMescroll.beforeRouteEnter() // 进入路由时,滚动到原来的列表位置,恢复回到顶部按钮和isBounce的配置\r\n      // 恢复水平菜单的滚动条位置\r\n      console.log(\"beforeRouterEnter\")\r\n      if (vm.$refs.tabsContent) vm.$refs.tabsContent.scrollLeft = vm.tabScrollLeft;\r\n    })\r\n  },\r\n  beforeRouteLeave (to, from, next) { // 如果没有配置回到顶部按钮或isBounce,则beforeRouteLeave不用写\r\n    let curMescroll = this.$refs['mescroll' + this.curIndex]; // 找到当前mescroll的ref,调用子组件mescroll-vue的beforeRouteEnter方法\r\n    curMescroll && curMescroll.beforeRouteLeave() // 退出路由时,记录列表滚动的位置,隐藏回到顶部按钮和isBounce的配置\r\n          console.log(\"beforeRouterLeave\")\r\n    next()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n  /*模拟的标题*/\r\n  .header{\r\n    z-index: 9990;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 83px;\r\n    line-height: 16px;\r\n    text-align: center;\r\n    /* background-color: white; */\r\n  }\r\n  .header .btn-left{\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    padding:12px 12px 0 12px;\r\n  }\r\n  .header .title{\r\n    margin-top: 12px;\r\n  }\r\n  /*菜单*/\r\n  .tabs-warp{\r\n    height: 42px;/*高度比tabs-content小, 目的是隐藏tabs的水平滚动条*/\r\n    overflow-y: hidden;\r\n    border-bottom: 1px solid #eee;\r\n    box-sizing: content-box;\r\n  }\r\n  .tabs-warp .tabs-content{\r\n    width: 100%;\r\n    height: 50px;\r\n    overflow-x: auto;\r\n  }\r\n  .tabs-warp .tabs-content .tabs{\r\n    width: 100%;\r\n    white-space: nowrap;\r\n  }\r\n  .tabs-warp .tabs-content .tabs li{\r\n    display: inline-block;\r\n    height: 40px;\r\n    line-height: 45px;\r\n    vertical-align: middle;\r\n  }\r\n  .tabs-warp .tabs-content .tabs .active{\r\n    color: #FF6990;\r\n  }\r\n  /*菜单进度*/\r\n  .tabs-warp .tab-bar{\r\n    position: relative;\r\n    height: 2px;\r\n    background-color: #FF6990;\r\n    transition: left 300ms;\r\n  }\r\n  /*列表*/\r\n  .swiper-container{\r\n    position: fixed;\r\n    top: 80px;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color:#fff;\r\n  }\r\n\r\n  /*展示上拉加载的数据列表*/\r\n  .data-li{\r\n    position: relative;\r\n    height: 80px;\r\n    padding: 10px 8px 10px 120px;\r\n    border-bottom: 1px solid #eee;\r\n  }\r\n  .data-li .pd-img{\r\n    position: absolute;\r\n    left: 18px;\r\n    top: 10px;\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n  .data-li .pd-name{\r\n    font-size: 13px;\r\n    line-height: 20px;\r\n    height: 40px;\r\n    margin-bottom: 10px;\r\n    overflow: hidden;\r\n  }\r\n  .data-li .pd-price{\r\n    font-size: 13px;\r\n    color: red;\r\n  }\r\n  .data-li .pd-sold{\r\n    font-size: 12px;\r\n    margin-top: 8px;\r\n    color: gray;\r\n  }\r\n  /* 数据列表样式 */\r\n.van-tabs__wrap{\r\n    position: fixed;\r\n    top:45px;\r\n}\r\n.van-tabs--line{\r\n    padding-top:92px;\r\n}\r\n.van-tabs__nav{\r\n    background: #f8f8f8;\r\n}\r\n.van-tab{\r\n    padding:0;\r\n}\r\n\r\n/* 6张动态刷新的图片，默认选第一张*/\r\n.section .freBgMovOne{\r\n    background-image: url(\"//127.0.0.1:7000/img/showself_loading_1.png\");\r\n}\r\n.section .freBgMovOne{\r\n    background-image: url(\"//127.0.0.1:7000/img/showself_loading_2.png\");\r\n}\r\n.section .freBgMovOne{\r\n    background-image: url(\"//127.0.0.1:7000/img/showself_loading_3.png\");\r\n}\r\n.section .freBgMovOne{\r\n    background-image: url(\"//127.0.0.1:7000/img/showself_loading_4.png\");\r\n}\r\n.section .freBgMovOne{\r\n    background-image: url(\"//127.0.0.1:7000/img/showself_loading_5.png\");\r\n}\r\n.section .freBgMovOne{\r\n    background-image: url(\"//127.0.0.1:7000/img/showself_loading_6.png\");\r\n}\r\n /* 护卫榜 */\r\n.section{\r\n    background:#fff;\r\n}\r\n.section .befThree a{\r\n    display:block;\r\n    text-align: center;\r\n}\r\n.section .befThree .threeBox{\r\n    display:flex;\r\n    justify-content: center;\r\n    height:177px;\r\n    align-items:flex-end;\r\n}\r\n.section .befThree .threeBox li{\r\n    width:32%;\r\n}\r\n.section .befThree .threeBox li:first-child{\r\n    background:#FEEBEF;\r\n}\r\n.section .befThree .threeBox li:nth-child(2){\r\n    background:#FEE4D9;\r\n}\r\n.section .befThree .threeBox li:last-child{\r\n    background:#DEF6FB;\r\n}\r\n.section .befThree li:first-child .Medal{\r\n    background-image:url(\"//127.0.0.1:7000/img/showself_team_icon_ranking_2.png\");\r\n}\r\n.section .befThree li:nth-child(2) .Medal{\r\n    background-image:url(\"//127.0.0.1:7000/img/showself_team_icon_ranking_1.png\");\r\n}\r\n.section .befThree li:last-child .Medal{\r\n    background-image:url(\"//127.0.0.1:7000/img/showself_team_icon_ranking_3.png\");\r\n}\r\n.section .befThree .Medal{\r\n    background:center;\r\n    background-repeat: no-repeat;\r\n    height:82px;\r\n    width:70px;\r\n    background-size: 100%;\r\n    margin:0 auto;\r\n    position: relative;\r\n    background-position:top center;\r\n}   \r\n.section .circle{\r\n    width:47px;\r\n    height:47px;\r\n    /* border:1px solid #008000; */\r\n    position: absolute;\r\n    top:26px;\r\n    left:12px;\r\n    border-radius: 50%;\r\n    overflow: hidden;\r\n    z-index: 0;\r\n}\r\n.section .circle img{\r\n    width:100%;\r\n    height:auto;\r\n}\r\n.section .befThree .style{\r\n    font-size: 10px;\r\n    margin-bottom:3px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n}\r\n.section .befThree li:first-child .style{\r\n    color:#D23F72;\r\n}\r\n.section .befThree  li:nth-child(2) .style{\r\n    color:#CC7958;\r\n}\r\n.section .befThree  li:last-child .style{\r\n    color:#57ACAA;\r\n}\r\n.section .guardRanking{\r\n    width:40%;\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n.section .rankBgBox{\r\n    position: relative;\r\n    width:46px;\r\n    height:22px;\r\n    /* text-align: center; */\r\n    margin:0 auto;\r\n}\r\n.section .rankBgBox .num{\r\n    position: absolute;\r\n    top:14px;\r\n    right:-6px;\r\n}\r\n.section .num img{\r\n    width:7px;\r\n    height:11px;\r\n}\r\n.section .rankBg{\r\n    width:100%;\r\n    height:100%;\r\n}\r\n.section .rankBgBox .rankText{\r\n    position:absolute;\r\n    white-space: nowrap;\r\n    display:inline-block;\r\n    font-size:12px;\r\n    color:#fff;\r\n    left:50%;\r\n    top:50%;\r\n    transform: translate(-50%,-50%);\r\n}\r\n.section .befThree .fight{\r\n    font-size: 12px;\r\n    color:gray;\r\n    padding:12px 0;\r\n}\r\n .section .befThree  li:first-child .fight span{\r\n    color:#D23F72;\r\n}\r\n .section .befThree  li:nth-child(2) .fight span{\r\n    color:#CC7958;\r\n}\r\n.section .befThree  li:last-child .fight span{\r\n    color:#57ACAA;\r\n}\r\n.section .befThree  li:nth-child(2) .Medal{\r\n    margin-bottom: 10px;\r\n}\r\n .section .aftThree .listItem{\r\n    display:flex;\r\n    align-items:center;\r\n}\r\n.section .aftThree .picFraBox{\r\n    width:15%;\r\n}\r\n.section .aftThree .picFra{\r\n    width:44px;\r\n    height:44px;\r\n    /* border:1px solid green; */\r\n    border-radius: 50%;\r\n    overflow:hidden;\r\n}\r\n.section .aftThree .picFra img{\r\n    width:100%;\r\n    height:auto;\r\n}\r\n.section .aftThree .rankBgBox{\r\n    margin-left:5px;\r\n}\r\n.section .aftThree .ranking{\r\n    width:10%;\r\n    color:gray;\r\n    display: inline-block;\r\n}\r\n.section .aftThree .name{\r\n    margin-bottom: 2px;\r\n    color:gray;\r\n    font-size: 12px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n}\r\n.section .aftThree .fight{\r\n    font-size:12px;\r\n    color:gray;\r\n    width:30%;\r\n    text-align: right;\r\n}\r\n.section .aftThree .fight span{\r\n    color:#D23F72;\r\n}\r\n/* 女神榜第三名之后的特别样式 */\r\n.section .aftThree .goddess{\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n   width:40%;\r\n}\r\n</style>\r\n\r\n\r\n\r\n"],"sourceRoot":"src/components"}]}