{"remainingRequest":"C:\\xampp\\htdocs\\vue_ui_cil\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\vue_ui_cil\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\vue_ui_cil\\src\\components\\tabbar\\shopcart.vue?vue&type=script&lang=js","dependencies":[{"path":"C:\\xampp\\htdocs\\vue_ui_cil\\src\\components\\tabbar\\shopcart.vue","mtime":1555046990000},{"path":"C:\\xampp\\htdocs\\vue_ui_cil\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1534853416000},{"path":"C:\\xampp\\htdocs\\vue_ui_cil\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"C:\\xampp\\htdocs\\vue_ui_cil\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      sl: false\n    };\n  },\n  methods: {\n    getlist: function getlist() {\n      var _this = this;\n\n      this.axios.get(\"http://127.0.0.1:3000/shopcart/getlist\").then(function (res) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = res.data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var v = _step.value;\n            v.cd = false; //给每个商品多加一个属性，默认值为false\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        _this.list = res.data;\n        console.log(_this.list);\n      });\n    },\n    removeitem: function removeitem(e) {\n      var _this2 = this;\n\n      //触发删除按钮时，获取自定义属性保存的商品id发送给服务器\n      var id = e.target.dataset.id;\n      this.axios.get(\"http://127.0.0.1:3000/shopcart/delete\", {\n        params: {\n          id: id\n        }\n      }).then(function (res) {\n        _this2.$toast(res.data.msg); //删除后，数据库删除了数据前端页面不会刷新，要重新加载数据达到刷新效果\n\n\n        _this2.getlist();\n      });\n    },\n    selectall: function selectall() {\n      //操作全选按钮影响单选按钮\n      console.log(1);\n\n      if (this.sl) {\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this.list[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var v = _step2.value;\n            v.cd = true;\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      } else {\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n          for (var _iterator3 = this.list[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var v = _step3.value;\n            v.cd = false;\n          }\n        } catch (err) {\n          _didIteratorError3 = true;\n          _iteratorError3 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n              _iterator3.return();\n            }\n          } finally {\n            if (_didIteratorError3) {\n              throw _iteratorError3;\n            }\n          }\n        }\n      }\n    },\n    selectsingle: function selectsingle() {\n      //操作单选按钮影响全选按钮\n      var alltrue = this.list.every(function (elem, i, arr) {\n        return elem.cd == true; //每次改变单选按钮都会调用，判断是否每个单选都是true\n      });\n      if (alltrue) this.sl = true;else this.sl = false;\n    },\n    del_cd: function del_cd() {\n      var _this3 = this;\n\n      //删除选中的商品\n      var ids = \"\";\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.list[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var v = _step4.value;\n          if (v.cd == true) ids += \",\" + v.id; //将选中的id拼接成字符串传递，不用数组，对象，某些浏览器不支持\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      ids = ids.slice(1);\n\n      if (ids.length == 0) {\n        this.$toast(\"请选择要删除的商品\");\n        return;\n      }\n\n      if (ids != \"\") {\n        //选中商品，删除前确认，确认了才发送ajax\n        this.$messagebox.confirm(\"是否要删除选中商品\").then(function (action) {\n          _this3.axios.get(\"http://127.0.0.1:3000/shopcart/del_cd\", {\n            params: {\n              ids: ids\n            }\n          }).then(function (res) {\n            if (res.data.code == 0) {\n              _this3.$toast(res.data.msg);\n            }\n\n            if (res.data.code == 1) //等于1表示删除成功\n              _this3.getlist(); //重新获取列表\n          });\n        }).catch(function (result) {\n          console.log(\"点取消键要做的事\");\n        });\n      }\n    }\n  },\n  created: function created() {\n    this.getlist();\n  }\n};",{"version":3,"sources":["shopcart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"shopcart\">\r\n        <div class=\"mui-card\">\r\n            <div class=\"mui-card-header\">\r\n                <div> <input type=\"checkbox\" v-model:checked=\"sl\" @change=\"selectall\">全选</div>\r\n                <input type=\"button\" value=\"删除选中商品\" @click=\"del_cd\">\r\n            </div>\r\n            <div class=\"mui-card-content\">\r\n                <div class=\"mui-card-content-inner\">\r\n                    <ul class=\"mui-table-view\">\r\n                        <li class=\"mui-table-view-cell mui-media\" v-for=\"(elem,i) in list\">\r\n                                <input type=\"checkbox\" v-model:checked=\"elem.cd\" @change=\"selectsingle\">\r\n                            <a href=\"javascript:;\">\r\n                                <img class=\"mui-media-object mui-pull-left\" src=\"http://127.0.0.1:3000/img/1.jpg\">\r\n                                <div class=\"mui-media-body\">\r\n                                  {{elem.lname}}\r\n                                    <p class=\"mui-ellipsis\">\r\n                                        ￥{{elem.price}}\r\n                                    </p>\r\n                                    <div class=\"act-box\">\r\n                                            <div class=\"count\"><span>-</span><input :value=\"elem.count\" type=\"text\"><span>+</span></div>\r\n                                            <input type=\"button\" value=\"删除\" :data-id=\"elem.id\" @click=\"removeitem\">\r\n                                            <!-- 用自定义属性保存商品的id -->\r\n                                    </div>\r\n                                   \r\n                                </div>\r\n                            </a>\r\n                        </li>\r\n        \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"mui-card-footer\">页脚</div>\r\n        </div>\r\n        \r\n    </div>\r\n</template>\r\n<script>\r\nexport default{\r\n    data(){\r\n        return {\r\n            list:[],\r\n            sl:false\r\n        }\r\n    },\r\n    methods:{\r\n        getlist(){\r\n            this.axios.get(\"http://127.0.0.1:3000/shopcart/getlist\").then(res=>{\r\n                for(var v of res.data){\r\n                    v.cd=false//给每个商品多加一个属性，默认值为false\r\n                }\r\n                this.list=res.data\r\n                console.log(this.list)\r\n            })\r\n        },\r\n        removeitem(e){\r\n            //触发删除按钮时，获取自定义属性保存的商品id发送给服务器\r\n            var id=e.target.dataset.id\r\n            this.axios.get(\"http://127.0.0.1:3000/shopcart/delete\",{\r\n                params:{\r\n                    id:id\r\n                }\r\n            }).then(res=>{\r\n               this.$toast(res.data.msg)\r\n               //删除后，数据库删除了数据前端页面不会刷新，要重新加载数据达到刷新效果\r\n               this.getlist()\r\n            })\r\n        },\r\n        selectall(){//操作全选按钮影响单选按钮\r\n            console.log(1)\r\n            if (this.sl) {\r\n                for(var v of this.list){\r\n                    v.cd=true\r\n                }\r\n            }else{\r\n                for(var v of this.list){\r\n                    v.cd=false\r\n                }                \r\n            }\r\n        },\r\n        selectsingle(){//操作单选按钮影响全选按钮\r\n            var alltrue=this.list.every(function(elem,i,arr){\r\n                return elem.cd==true//每次改变单选按钮都会调用，判断是否每个单选都是true\r\n            })\r\n            if(alltrue)\r\n            this.sl=true\r\n            else\r\n            this.sl=false\r\n        },\r\n        del_cd(){//删除选中的商品\r\n            var ids=\"\"\r\n            for(var v of this.list){\r\n                if(v.cd==true)\r\n                ids+=\",\"+v.id//将选中的id拼接成字符串传递，不用数组，对象，某些浏览器不支持\r\n            }\r\n            ids=ids.slice(1)\r\n            if(ids.length==0){\r\n                this.$toast(\"请选择要删除的商品\")\r\n                return;\r\n            }\r\n            if(ids!=\"\"){//选中商品，删除前确认，确认了才发送ajax\r\n                this.$messagebox.confirm(\"是否要删除选中商品\").then(action=>{\r\n                    this.axios.get(\"http://127.0.0.1:3000/shopcart/del_cd\",{\r\n                params:{\r\n                    ids:ids\r\n                }\r\n            }).then(res=>{\r\n                if(res.data.code==0){\r\n                    this.$toast(res.data.msg)\r\n                }\r\n                if(res.data.code==1)//等于1表示删除成功\r\n                this.getlist()//重新获取列表\r\n            })\r\n                }).catch(result=>{\r\n                    console.log(\"点取消键要做的事\")\r\n                })\r\n             \r\n            }\r\n          \r\n        }\r\n    },\r\n    created(){\r\n        this.getlist()\r\n    },\r\n  \r\n}\r\n</script>\r\n<style>\r\n.shopcart .count{\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n.shopcart .mui-card .count span{\r\n    width:30px;\r\n    height:30px;\r\n    display: block;\r\n    text-align: center;\r\n    line-height: 30px;\r\n}\r\n.shopcart .mui-card .count input{\r\n    border: none;\r\n    width:30px;\r\n    height:30px;\r\n    text-align: center;\r\n    padding:0;\r\n    margin:0;\r\n}\r\n.shopcart .mui-card .count span{\r\n    border:1px solid gray;\r\n}\r\n.shopcart .act-box{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n}\r\n\r\n</style>"],"sourceRoot":"src\\components\\tabbar"}]}